digraph {
	"AU FAKERTST AU 0 0 95" [label=Begin]
	subgraph "Node 0" {
	}
	"AU FAKERTST AU 0 0 95" -> "AU FAKERTST AU 258 258 96" [label=start]
	"AU FAKERTST AU 258 258 96" [label="MAIN .
 "]
	subgraph "Node 1" {
	}
	"AU FAKERTST AU 258 258 96" -> "AU FAKERTST AU 261 261 89" [label="sequential next"]
	"AU FAKERTST AU 261 261 89" [label="PERFORM SUB-1000-START-UP THRU SUB-1000-EXIT"]
	"AU FAKERTST AU 261 261 89" -> "AU FAKERTST AU 273 4 90" [label="procedure call"]
	"AU FAKERTST AU 273 4 90" [label="SUB-1000-START-UP .
 
MOVE FUNCTION WHEN-COMPILED TO W-COMPILED-DATE
DISPLAY 'FAKERTST compiled on ' W-COMPILED-DATE-YYYY '/' W-COMPILED-DATE-MM '/' W-COMPILED-DATE-DD ' at ' W-COMPILED-TIME-HH ':' W-COMPILED-TIME-MM ':' W-COMPILED-TIME-SS
OPEN INPUT TESTINPT OUTPUT TESTOUTP"]
	"AU FAKERTST AU 273 4 90" -> "AU FAKERTST AU 290 291 91" [label="sequential next"]
	"AU FAKERTST AU 290 291 91" [label="SUB-1000-EXIT .
 
EXIT"]
	"AU FAKERTST AU 290 291 91" -> "AU FAKERTST AU 261 261 89" [label="procedure backward call"]
	subgraph "Node 2" {
	}
	"AU FAKERTST AU 261 261 89" -> "AU FAKERTST AU 263 263 97" [label="perform-exit"]
	"AU FAKERTST AU 263 263 97" [label="PERFORM SUB-9100-READ-TESTINPT THRU SUB-9100-EXIT"]
	subgraph "Node 3" {
	}
	"AU FAKERTST AU 263 263 97" -> "AU FAKERTST AU 265 1 98" [label="perform-exit"]
	"AU FAKERTST AU 265 1 98" [label="PERFORM SUB-2000-PROCESS THRU SUB-2000-EXIT UNTIL W-EOF"]
	subgraph "Node 4" {
	}
	"AU FAKERTST AU 265 1 98" -> "AU FAKERTST AU 268 268 92" [label="perform-exit"]
	"AU FAKERTST AU 268 268 92" [label="PERFORM SUB-3000-SHUT-DOWN THRU SUB-3000-EXIT"]
	"AU FAKERTST AU 268 268 92" -> "AU FAKERTST AU 359 373 93" [label="procedure call"]
	"AU FAKERTST AU 359 373 93" [label="SUB-3000-SHUT-DOWN .
 
CLOSE TESTINPT TESTOUTP
MOVE W-TESTINPT-RECS TO W-DISP-NUM
DISPLAY 'TESTINPT records read:    ' W-DISP-NUM
MOVE W-TESTOUTP-RECS TO W-DISP-NUM
DISPLAY 'TESTOUTP records written: ' W-DISP-NUM
DISPLAY 'FAKERTST completed'"]
	"AU FAKERTST AU 359 373 93" -> "AU FAKERTST AU 375 376 94" [label="sequential next"]
	"AU FAKERTST AU 375 376 94" [label="SUB-3000-EXIT .
 
EXIT"]
	"AU FAKERTST AU 375 376 94" -> "AU FAKERTST AU 268 268 92" [label="procedure backward call"]
	subgraph "Node 5" {
	}
	"AU FAKERTST AU 268 268 92" -> "AU FAKERTST AU 270 271 99" [label="perform-exit"]
	"AU FAKERTST AU 270 271 99" [label="MAIN-EXIT .
 
STOP RUN"]
	subgraph "Node 6" {
	}
	"AU FAKERTST AU 265 1 98" -> "AU FAKERTST AU 293 14 100" [label="procedure call"]
	"AU FAKERTST AU 293 14 100" [label="SUB-2000-PROCESS .
 
MOVE TI-PROVIDER-FUNCTION TO FAKER-PROVIDER-FUNCTION"]
	subgraph "Node 7" {
	}
	"AU FAKERTST AU 293 14 100" -> "PC FAKERTST PC 299 299 3" [label="sequential next"]
	"PC FAKERTST PC 299 299 3" [label="IF TI-COUNT NUMERIC"]
	"PC FAKERTST PC 299 299 3" -> "AU FAKERTST AU 300 300 84" [label=true]
	"PC FAKERTST PC 299 299 3" -> "AU FAKERTST AU 302 302 86" [label=false]
	"AU FAKERTST AU 302 302 86" [label="MOVE 1 TO W-TEST-CNT"]
	"AU FAKERTST AU 302 302 86" -> "AU FAKERTST AU 303 303 85" [label="sequential next"]
	"AU FAKERTST AU 303 303 85" [label="END-IF"]
	"AU FAKERTST AU 300 300 84" [label="MOVE TI-COUNT TO W-TEST-CNT"]
	"AU FAKERTST AU 300 300 84" -> "AU FAKERTST AU 303 303 85" [label="sequential next"]
	subgraph "Node 8" {
	}
	"PC FAKERTST PC 299 299 3" -> "AU FAKERTST AU 305 60 101" [label="sequential next"]
	"AU FAKERTST AU 305 60 101" [label="PERFORM SUB-2100-CALL-FAKER THRU SUB-2100-EXIT W-TEST-CNT TIMES"]
	subgraph "Node 9" {
	}
	"AU FAKERTST AU 305 60 101" -> "AU FAKERTST AU 315 318 102" [label="procedure call"]
	"AU FAKERTST AU 315 318 102" [label="SUB-2100-CALL-FAKER .
 
CALL W-FAKER-PROG USING W-FAKER-PARAMETER"]
	subgraph "Node 10" {
	}
	"AU FAKERTST AU 315 318 102" -> "PC FAKERTST PC 320 320 5" [label="sequential next"]
	"PC FAKERTST PC 320 320 5" [label="IF FAKER-RESPONSE-GOOD"]
	subgraph "Node 11" {
	}
	"PC FAKERTST PC 320 320 5" -> "AU FAKERTST AU 321 324 103" [label=true]
	"AU FAKERTST AU 321 324 103" [label="MOVE TI-PROVIDER-FUNCTION TO TO-PROVIDER-FUNCTION
MOVE ': ' TO TO-COLON
MOVE FAKER-RESULT TO TO-FAKER-RESULT"]
	subgraph "Node 12" {
	}
	"AU FAKERTST AU 321 324 103" -> "AU FAKERTST AU 326 326 104" [label="sequential next"]
	"AU FAKERTST AU 326 326 104" [label="PERFORM SUB-9200-WRITE-TESTOUTP THRU SUB-9200-EXIT"]
	subgraph "Node 13" {
	}
	"AU FAKERTST AU 326 326 104" -> "PC FAKERTST PC 328 19 4" [label="perform-exit"]
	"PC FAKERTST PC 328 19 4" [label="IF ADDRESS-ADDRESS OR PERSON-NAME OR PERSON-NAME-MALE OR PERSON-NAME-FEMALE"]
	"PC FAKERTST PC 328 19 4" -> "AU FAKERTST AU 332 22 87" [label=true]
	"PC FAKERTST PC 328 19 4" -> "AU FAKERTST AU 338 338 88" [label="outside-if"]
	"AU FAKERTST AU 338 338 88" [label="END-IF"]
	"AU FAKERTST AU 332 22 87" [label="MOVE SPACES TO TO-PROVIDER-FUNCTION
MOVE ': ' TO TO-COLON
MOVE FAKER-RESULT-FIELDS TO TO-FAKER-RESULT"]
	subgraph "Node 14" {
	}
	"PC FAKERTST PC 328 19 4" -> "AU FAKERTST AU 337 337 105" [label="sequential next"]
	"AU FAKERTST AU 337 337 105" [label="PERFORM SUB-9200-WRITE-TESTOUTP THRU SUB-9200-EXIT"]
	subgraph "Node 15" {
	}
	"AU FAKERTST AU 337 337 105" -> "AU FAKERTST AU 391 396 106" [label="procedure call"]
	"AU FAKERTST AU 391 396 106" [label="SUB-9200-WRITE-TESTOUTP .
 
WRITE TESTOUTP-REC
ADD 1 TO W-TESTOUTP-RECS"]
	subgraph "Node 16" {
	}
	"AU FAKERTST AU 391 396 106" -> "AU FAKERTST AU 398 399 107" [label="sequential next"]
	"AU FAKERTST AU 398 399 107" [label="SUB-9200-EXIT .
 
EXIT"]
	subgraph "Node 17" {
	}
	"AU FAKERTST AU 398 399 107" -> "AU FAKERTST AU 326 326 104" [label="procedure backward call"]
	"AU FAKERTST AU 398 399 107" -> "AU FAKERTST AU 337 337 105" [label="procedure backward call"]
	"AU FAKERTST AU 391 396 106" -> "AU FAKERTST AU 398 399 107" [label="sequential next"]
	"AU FAKERTST AU 337 337 105" -> "AU FAKERTST AU 338 338 88" [label="perform-exit"]
	"AU FAKERTST AU 338 338 88" [label="END-IF"]
	subgraph "Node 18" {
	}
	"AU FAKERTST AU 338 338 88" -> "AU FAKERTST AU 344 344 108" [label="sequential next"]
	"AU FAKERTST AU 344 344 108" [label="END-IF"]
	subgraph "Node 19" {
	}
	"PC FAKERTST PC 328 19 4" -> "AU FAKERTST AU 344 344 108" [label="sequential next"]
	"AU FAKERTST AU 326 326 104" -> "AU FAKERTST AU 391 396 106" [label="procedure call"]
	"PC FAKERTST PC 320 320 5" -> "AU FAKERTST AU 340 24 109" [label=false]
	"AU FAKERTST AU 340 24 109" [label="DISPLAY W-ERROR-MSG FAKER-RESPONSE-CODE ' - ' FAKER-RESPONSE-MSG"]
	subgraph "Node 20" {
	}
	"AU FAKERTST AU 340 24 109" -> "AU FAKERTST AU 356 357 110" [label="sequential next"]
	"AU FAKERTST AU 356 357 110" [label="SUB-2100-EXIT .
 
EXIT"]
	subgraph "Node 21" {
	}
	"AU FAKERTST AU 356 357 110" -> "AU FAKERTST AU 305 60 101" [label="procedure backward call"]
	"AU FAKERTST AU 340 24 109" -> "AU FAKERTST AU 344 344 108" [label="sequential next"]
	"AU FAKERTST AU 305 60 101" -> "AU FAKERTST AU 308 308 111" [label="sequential next"]
	"AU FAKERTST AU 308 308 111" [label="SUB-2000-READ .
 "]
	subgraph "Node 22" {
	}
	"AU FAKERTST AU 308 308 111" -> "AU FAKERTST AU 310 310 112" [label="sequential next"]
	"AU FAKERTST AU 310 310 112" [label="PERFORM SUB-9100-READ-TESTINPT THRU SUB-9100-EXIT"]
	subgraph "Node 23" {
	}
	"AU FAKERTST AU 310 310 112" -> "AU FAKERTST AU 378 381 113" [label="procedure call"]
	"AU FAKERTST AU 378 381 113" [label="SUB-9100-READ-TESTINPT .
 
READ TESTINPT"]
	subgraph "Node 24" {
	}
	"AU FAKERTST AU 378 381 113" -> "AU FAKERTST AU 383 383 114" [label=AtEnd]
	"AU FAKERTST AU 383 383 114" [label="SET W-EOF TO TRUE"]
	subgraph "Node 25" {
	}
	"AU FAKERTST AU 378 381 113" -> "AU FAKERTST AU 385 385 115" [label=NotAtEnd]
	"AU FAKERTST AU 385 385 115" [label="ADD 1 TO W-TESTINPT-RECS"]
	subgraph "Node 26" {
	}
	"AU FAKERTST AU 385 385 115" -> "AU FAKERTST AU 388 389 116" [label="sequential next"]
	"AU FAKERTST AU 388 389 116" [label="SUB-9100-EXIT .
 
EXIT"]
	subgraph "Node 27" {
	}
	"AU FAKERTST AU 388 389 116" -> "AU FAKERTST AU 263 263 97" [label="procedure backward call"]
	"AU FAKERTST AU 388 389 116" -> "AU FAKERTST AU 310 310 112" [label="procedure backward call"]
	"AU FAKERTST AU 385 385 115" -> "AU FAKERTST AU 388 389 116" [label="sequential next"]
	"AU FAKERTST AU 310 310 112" -> "AU FAKERTST AU 312 313 117" [label="sequential next"]
	"AU FAKERTST AU 312 313 117" [label="SUB-2000-EXIT .
 
EXIT"]
	subgraph "Node 28" {
	}
	"AU FAKERTST AU 312 313 117" -> "AU FAKERTST AU 265 1 98" [label="procedure backward call"]
	"AU FAKERTST AU 263 263 97" -> "AU FAKERTST AU 378 381 113" [label="procedure call"]
	node [filled=lightblue shape=circle]
	edge [color=black]
}
