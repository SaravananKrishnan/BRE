digraph {
	"AU FAKCOMP AU 0 0 2631" [label=Begin]
	subgraph "Node 503" {
	}
	"AU FAKCOMP AU 0 0 2631" -> "AU FAKCOMP AU 515 515 2632" [label=start]
	"AU FAKCOMP AU 515 515 2632" [label="MAIN .
 "]
	subgraph "Node 504" {
	}
	"AU FAKCOMP AU 515 515 2632" -> "AU FAKCOMP AU 518 518 2633" [label="sequential next"]
	"AU FAKCOMP AU 518 518 2633" [label="PERFORM SUB-1000-START-UP THRU SUB-1000-EXIT"]
	subgraph "Node 505" {
	}
	"AU FAKCOMP AU 518 518 2633" -> "AU FAKCOMP AU 520 520 2634" [label="perform-exit"]
	"AU FAKCOMP AU 520 520 2634" [label="PERFORM SUB-2000-PROCESS THRU SUB-2000-EXIT"]
	subgraph "Node 506" {
	}
	"AU FAKCOMP AU 520 520 2634" -> "AU FAKCOMP AU 522 522 2619" [label="perform-exit"]
	"AU FAKCOMP AU 522 522 2619" [label="PERFORM SUB-3000-SHUT-DOWN THRU SUB-3000-EXIT"]
	"AU FAKCOMP AU 522 522 2619" -> "AU FAKCOMP AU 718 718 2620" [label="procedure call"]
	"AU FAKCOMP AU 718 718 2620" [label="SUB-3000-SHUT-DOWN .
 "]
	"AU FAKCOMP AU 718 718 2620" -> "AU FAKCOMP AU 733 734 2621" [label="sequential next"]
	"AU FAKCOMP AU 733 734 2621" [label="SUB-3000-EXIT .
 
EXIT"]
	"AU FAKCOMP AU 733 734 2621" -> "AU FAKCOMP AU 522 522 2619" [label="procedure backward call"]
	subgraph "Node 507" {
	}
	"AU FAKCOMP AU 522 522 2619" -> "AU FAKCOMP AU 524 525 2635" [label="perform-exit"]
	"AU FAKCOMP AU 524 525 2635" [label="MAIN-EXIT .
 
GOBACK"]
	subgraph "Node 508" {
	}
	"AU FAKCOMP AU 520 520 2634" -> "AU FAKCOMP AU 566 14 2636" [label="procedure call"]
	"AU FAKCOMP AU 566 14 2636" [label="SUB-2000-PROCESS .
 
MOVE 0 TO FAKER-INFO-CNT IN L-PARAMETER
MOVE LOW-VALUES TO FAKER-INFO-OCCS IN L-PARAMETER"]
	subgraph "Node 509" {
	}
	"AU FAKCOMP AU 566 14 2636" -> "PC FAKCOMP PC 574 574 432" [label="sequential next"]
	"PC FAKCOMP PC 574 574 432" [label="EVALUATE TRUE"]
	subgraph "Node 510" {
	}
	"PC FAKCOMP PC 574 574 432" -> "PC FAKCOMP PC 575 575 433" [label="evaluate when"]
	"PC FAKCOMP PC 575 575 433" [label="WHEN COMPANY-COMPANY IN L-PARAMETER"]
	subgraph "Node 511" {
	}
	"PC FAKCOMP PC 575 575 433" -> "AU FAKCOMP AU 576 576 2637" [label=true]
	"AU FAKCOMP AU 576 576 2637" [label="PERFORM SUB-9010-COMPANY THRU SUB-9010-EXIT"]
	subgraph "Node 512" {
	}
	"AU FAKCOMP AU 576 576 2637" -> "AU FAKCOMP AU 782 8 2638" [label="procedure call"]
	"AU FAKCOMP AU 782 8 2638" [label="SUB-9010-COMPANY .
 
MOVE 'FORMATS-COMPANY' TO W-TABLE-1
SET ADDRESS OF L-FORMAT-TABLE-1 TO ADDRESS OF FORMATS-COMPANY"]
	subgraph "Node 513" {
	}
	"AU FAKCOMP AU 782 8 2638" -> "AU FAKCOMP AU 790 791 2639" [label="sequential next"]
	"AU FAKCOMP AU 790 791 2639" [label="SUB-9010-EXIT .
 
EXIT"]
	subgraph "Node 514" {
	}
	"AU FAKCOMP AU 790 791 2639" -> "AU FAKCOMP AU 576 576 2637" [label="procedure backward call"]
	"AU FAKCOMP AU 576 576 2637" -> "AU FAKCOMP AU 0 0 2640" [label="perform-exit"]
	"AU FAKCOMP AU 0 0 2640" [label="END-EVALUATE"]
	subgraph "Node 515" {
	}
	"AU FAKCOMP AU 0 0 2640" -> "AU FAKCOMP AU 0 31 2641" [label="sequential next"]
	"AU FAKCOMP AU 0 31 2641" [label="ADD 1 TO FAKER-INFO-CNT IN L-PARAMETER
SET FI-DX TO FAKER-INFO-CNT IN L-PARAMETER
MOVE W-TABLE-1 TO FAKER-TABLE IN L-PARAMETER ( FI-DX )"]
	subgraph "Node 516" {
	}
	"AU FAKCOMP AU 0 31 2641" -> "PC FAKCOMP PC 601 601 434" [label="sequential next"]
	"PC FAKCOMP PC 601 601 434" [label="IF W-TABLE-1 ( 1 : 8 ) = 'FORMATS-'"]
	subgraph "Node 517" {
	}
	"PC FAKCOMP PC 601 601 434" -> "AU FAKCOMP AU 602 602 2642" [label=true]
	"AU FAKCOMP AU 602 602 2642" [label="PERFORM SUB-2100-FORMAT THRU SUB-2100-EXIT"]
	subgraph "Node 518" {
	}
	"AU FAKCOMP AU 602 602 2642" -> "PC FAKCOMP PC 604 26 424" [label="perform-exit"]
	"PC FAKCOMP PC 604 26 424" [label="IF NOT FAKER-RESPONSE-GOOD IN L-PARAMETER"]
	"PC FAKCOMP PC 604 26 424" -> "AU FAKCOMP AU 606 606 2603" [label=true]
	"PC FAKCOMP PC 604 26 424" -> "AU FAKCOMP AU 607 607 2604" [label="outside-if"]
	"AU FAKCOMP AU 607 607 2604" [label="END-IF"]
	"AU FAKCOMP AU 606 606 2603" [label="GO TO SUB-2000-EXIT"]
	subgraph "Node 519" {
	}
	"PC FAKCOMP PC 604 26 424" -> "AU FAKCOMP AU 615 616 2643" [label="procedure call"]
	"AU FAKCOMP AU 615 616 2643" [label="SUB-2000-EXIT .
 
EXIT"]
	subgraph "Node 520" {
	}
	"AU FAKCOMP AU 615 616 2643" -> "AU FAKCOMP AU 520 520 2634" [label="procedure backward call"]
	"PC FAKCOMP PC 604 26 424" -> "AU FAKCOMP AU 613 613 2644" [label="sequential next"]
	"AU FAKCOMP AU 613 613 2644" [label="END-IF"]
	subgraph "Node 521" {
	}
	"AU FAKCOMP AU 602 602 2642" -> "AU FAKCOMP AU 618 618 2645" [label="procedure call"]
	"AU FAKCOMP AU 618 618 2645" [label="SUB-2100-FORMAT .
 "]
	subgraph "Node 522" {
	}
	"AU FAKCOMP AU 618 618 2645" -> "AU FAKCOMP AU 621 621 2646" [label="sequential next"]
	"AU FAKCOMP AU 621 621 2646" [label="PERFORM SUB-9700-FIND-RANDOM-FORMAT THRU SUB-9700-EXIT"]
	subgraph "Node 523" {
	}
	"AU FAKCOMP AU 621 621 2646" -> "AU FAKCOMP AU 623 624 2647" [label="perform-exit"]
	"AU FAKCOMP AU 623 624 2647" [label="MOVE W-FAKER-FORMAT TO W-RECURSED-FORMAT
MOVE 1 TO W-SUB-1"]
	subgraph "Node 524" {
	}
	"AU FAKCOMP AU 623 624 2647" -> "AU FAKCOMP AU 626 34 2648" [label="sequential next"]
	"AU FAKCOMP AU 626 34 2648" [label="PERFORM SUB-2110-RECURSE-FORMATS THRU SUB-2110-EXIT UNTIL W-SUB-1 > LENGTH OF W-RECURSED-FORMAT OR NOT FAKER-RESPONSE-GOOD IN L-PARAMETER"]
	subgraph "Node 525" {
	}
	"AU FAKCOMP AU 626 34 2648" -> "PC FAKCOMP PC 631 40 425" [label="perform-exit"]
	"PC FAKCOMP PC 631 40 425" [label="IF NOT FAKER-RESPONSE-GOOD IN L-PARAMETER"]
	"PC FAKCOMP PC 631 40 425" -> "AU FAKCOMP AU 633 633 2605" [label=true]
	"PC FAKCOMP PC 631 40 425" -> "AU FAKCOMP AU 634 634 2606" [label="outside-if"]
	"AU FAKCOMP AU 634 634 2606" [label="END-IF"]
	"AU FAKCOMP AU 633 633 2605" [label="GO TO SUB-2100-EXIT"]
	subgraph "Node 526" {
	}
	"PC FAKCOMP PC 631 40 425" -> "AU FAKCOMP AU 647 648 2649" [label="procedure call"]
	"AU FAKCOMP AU 647 648 2649" [label="SUB-2100-EXIT .
 
EXIT"]
	subgraph "Node 527" {
	}
	"AU FAKCOMP AU 647 648 2649" -> "AU FAKCOMP AU 602 602 2642" [label="procedure backward call"]
	"PC FAKCOMP PC 631 40 425" -> "AU FAKCOMP AU 0 41 2650" [label="sequential next"]
	"AU FAKCOMP AU 0 41 2650" [label="MOVE SPACES TO FAKER-RESULT IN L-PARAMETER
MOVE 1 TO W-SUB-1 W-SUB-2"]
	subgraph "Node 528" {
	}
	"AU FAKCOMP AU 0 41 2650" -> "AU FAKCOMP AU 641 7 2651" [label="sequential next"]
	"AU FAKCOMP AU 641 7 2651" [label="PERFORM SUB-2120-PROCESS-FORMATS THRU SUB-2120-EXIT UNTIL W-SUB-1 > LENGTH OF W-RECURSED-FORMAT OR W-SUB-2 > LENGTH OF FAKER-RESULT IN L-PARAMETER OR W-RECURSED-FORMAT ( W-SUB-1 : ) = SPACES"]
	subgraph "Node 529" {
	}
	"AU FAKCOMP AU 641 7 2651" -> "AU FAKCOMP AU 690 690 2652" [label="procedure call"]
	"AU FAKCOMP AU 690 690 2652" [label="SUB-2120-PROCESS-FORMATS .
 "]
	subgraph "Node 530" {
	}
	"AU FAKCOMP AU 690 690 2652" -> "PC FAKCOMP PC 693 693 435" [label="sequential next"]
	"PC FAKCOMP PC 693 693 435" [label="IF W-RECURSED-FORMAT-CHAR ( W-SUB-1 ) = W-FORMAT-START"]
	subgraph "Node 531" {
	}
	"PC FAKCOMP PC 693 693 435" -> "AU FAKCOMP AU 694 58 2653" [label=true]
	"AU FAKCOMP AU 694 58 2653" [label="ADD 1 TO W-SUB-1
UNSTRING W-RECURSED-FORMAT DELIMITED W-FORMAT-END INTO W-FORMAT-ENTRY POINTER W-SUB-1"]
	subgraph "Node 532" {
	}
	"AU FAKCOMP AU 694 58 2653" -> "AU FAKCOMP AU 701 701 2654" [label="sequential next"]
	"AU FAKCOMP AU 701 701 2654" [label="PERFORM SUB-9000-EXAMINE-FIND-FORMAT THRU SUB-9000-EXIT"]
	subgraph "Node 533" {
	}
	"AU FAKCOMP AU 701 701 2654" -> "AU FAKCOMP AU 703 49 2655" [label="perform-exit"]
	"AU FAKCOMP AU 703 49 2655" [label="STRING W-FAKER-RESULT DELIMITED '  ' INTO FAKER-RESULT IN L-PARAMETER POINTER W-SUB-2"]
	subgraph "Node 534" {
	}
	"AU FAKCOMP AU 703 49 2655" -> "AU FAKCOMP AU 713 713 2656" [label="sequential next"]
	"AU FAKCOMP AU 713 713 2656" [label="END-IF"]
	subgraph "Node 535" {
	}
	"AU FAKCOMP AU 701 701 2654" -> "AU FAKCOMP AU 736 736 2657" [label="procedure call"]
	"AU FAKCOMP AU 736 736 2657" [label="SUB-9000-EXAMINE-FIND-FORMAT .
 "]
	subgraph "Node 536" {
	}
	"AU FAKCOMP AU 736 736 2657" -> "PC FAKCOMP PC 739 739 436" [label="sequential next"]
	"PC FAKCOMP PC 739 739 436" [label="EVALUATE W-FORMAT-ENTRY"]
	subgraph "Node 537" {
	}
	"PC FAKCOMP PC 739 739 436" -> "PC FAKCOMP PC 740 740 437" [label="evaluate when"]
	"PC FAKCOMP PC 740 740 437" [label="WHEN 'CS'"]
	subgraph "Node 538" {
	}
	"PC FAKCOMP PC 740 740 437" -> "AU FAKCOMP AU 741 741 2658" [label=true]
	"AU FAKCOMP AU 741 741 2658" [label="PERFORM SUB-9020-SUFFIX THRU SUB-9020-EXIT"]
	subgraph "Node 539" {
	}
	"AU FAKCOMP AU 741 741 2658" -> "AU FAKCOMP AU 793 61 2659" [label="procedure call"]
	"AU FAKCOMP AU 793 61 2659" [label="SUB-9020-SUFFIX .
 
MOVE 'COMPANY-SUFFIXES' TO W-TABLE-1
SET ADDRESS OF L-COMPANY-TABLE-1 TO ADDRESS OF COMPANY-SUFFIXES"]
	subgraph "Node 540" {
	}
	"AU FAKCOMP AU 793 61 2659" -> "AU FAKCOMP AU 801 802 2660" [label="sequential next"]
	"AU FAKCOMP AU 801 802 2660" [label="SUB-9020-EXIT .
 
EXIT"]
	subgraph "Node 541" {
	}
	"AU FAKCOMP AU 801 802 2660" -> "AU FAKCOMP AU 579 579 2661" [label="procedure backward call"]
	"AU FAKCOMP AU 579 579 2661" [label="PERFORM SUB-9020-SUFFIX THRU SUB-9020-EXIT"]
	subgraph "Node 542" {
	}
	"AU FAKCOMP AU 579 579 2661" -> "AU FAKCOMP AU 793 61 2659" [label="procedure call"]
	"AU FAKCOMP AU 579 579 2661" -> "AU FAKCOMP AU 0 0 2640" [label="perform-exit"]
	"AU FAKCOMP AU 801 802 2660" -> "AU FAKCOMP AU 741 741 2658" [label="procedure backward call"]
	"AU FAKCOMP AU 793 61 2659" -> "AU FAKCOMP AU 801 802 2660" [label="sequential next"]
	"AU FAKCOMP AU 741 741 2658" -> "AU FAKCOMP AU 0 0 2662" [label="perform-exit"]
	"AU FAKCOMP AU 0 0 2662" [label="END-EVALUATE"]
	subgraph "Node 543" {
	}
	"AU FAKCOMP AU 0 0 2662" -> "AU FAKCOMP AU 0 52 2663" [label="sequential next"]
	"AU FAKCOMP AU 0 52 2663" [label="ADD 1 TO FAKER-INFO-CNT IN L-PARAMETER
SET FI-DX TO FAKER-INFO-CNT IN L-PARAMETER
MOVE W-TABLE-1 TO FAKER-TABLE IN L-PARAMETER ( FI-DX )"]
	subgraph "Node 544" {
	}
	"AU FAKCOMP AU 0 52 2663" -> "PC FAKCOMP PC 766 766 438" [label="sequential next"]
	"PC FAKCOMP PC 766 766 438" [label="EVALUATE TRUE"]
	subgraph "Node 545" {
	}
	"PC FAKCOMP PC 766 766 438" -> "PC FAKCOMP PC 767 767 439" [label="evaluate when"]
	"PC FAKCOMP PC 767 767 439" [label="WHEN W-TABLE-1 ( 1 : 8 ) = 'FORMATS-'"]
	subgraph "Node 546" {
	}
	"PC FAKCOMP PC 767 767 439" -> "AU FAKCOMP AU 768 768 2664" [label=true]
	"AU FAKCOMP AU 768 768 2664" [label="PERFORM SUB-9700-FIND-RANDOM-FORMAT THRU SUB-9700-EXIT"]
	subgraph "Node 547" {
	}
	"AU FAKCOMP AU 768 768 2664" -> "AU FAKCOMP AU 816 819 2665" [label="procedure call"]
	"AU FAKCOMP AU 816 819 2665" [label="SUB-9700-FIND-RANDOM-FORMAT .
 
PERFORM SUB-9901-CALL-FAKRAND"]
	subgraph "Node 548" {
	}
	"AU FAKCOMP AU 816 819 2665" -> "PC FAKCOMP PC 821 821 426" [label="perform-exit"]
	"PC FAKCOMP PC 821 821 426" [label="IF W-TABLE-2 = SPACES"]
	"PC FAKCOMP PC 821 821 426" -> "AU FAKCOMP AU 822 64 2607" [label=true]
	"PC FAKCOMP PC 821 821 426" -> "AU FAKCOMP AU 825 65 2609" [label=false]
	"AU FAKCOMP AU 825 65 2609" [label="COMPUTE W-RANDOM-NO = FAKRAND-RANDOM-NO * ( L-FORMAT-WEIGHT-TOT-1 + L-FORMAT-WEIGHT-TOT-2 )"]
	"AU FAKCOMP AU 825 65 2609" -> "AU FAKCOMP AU 731 731 2608" [label="sequential next"]
	"AU FAKCOMP AU 731 731 2608" [label="END-IF"]
	"AU FAKCOMP AU 822 64 2607" [label="COMPUTE W-RANDOM-NO = FAKRAND-RANDOM-NO * L-FORMAT-WEIGHT-TOT-1"]
	"AU FAKCOMP AU 822 64 2607" -> "AU FAKCOMP AU 731 731 2608" [label="sequential next"]
	subgraph "Node 549" {
	}
	"PC FAKCOMP PC 821 821 426" -> "AU FAKCOMP AU 830 832 2666" [label="sequential next"]
	"AU FAKCOMP AU 830 832 2666" [label="MOVE W-RANDOM-NO TO FAKER-RANDOM-NO-SUB IN L-PARAMETER ( FI-DX )
MOVE 0 TO W-FOUND-DX"]
	subgraph "Node 550" {
	}
	"AU FAKCOMP AU 830 832 2666" -> "AU FAKCOMP AU 834 23 2667" [label="sequential next"]
	"AU FAKCOMP AU 834 23 2667" [label="PERFORM SUB-9710-FIND-FORMAT THRU SUB-9710-EXIT VARYING L-F-DX-1 FROM 1 BY 1 UNTIL W-FOUND-DX > 0 OR L-F-DX-1 > L-FORMAT-ENTRY-CNT-1"]
	subgraph "Node 551" {
	}
	"AU FAKCOMP AU 834 23 2667" -> "PC FAKCOMP PC 839 839 440" [label="perform-exit"]
	"PC FAKCOMP PC 839 839 440" [label="EVALUATE TRUE"]
	subgraph "Node 552" {
	}
	"PC FAKCOMP PC 839 839 440" -> "PC FAKCOMP PC 840 840 441" [label="evaluate when"]
	"PC FAKCOMP PC 840 840 441" [label="WHEN W-FOUND-DX > 0"]
	subgraph "Node 553" {
	}
	"PC FAKCOMP PC 840 840 441" -> "AU FAKCOMP AU 841 66 2668" [label=true]
	"AU FAKCOMP AU 841 66 2668" [label="MOVE L-FORMAT-ENTRY-1 ( W-FOUND-DX ) TO W-FAKER-FORMAT"]
	subgraph "Node 554" {
	}
	"AU FAKCOMP AU 841 66 2668" -> "AU FAKCOMP AU 0 0 2669" [label="sequential next"]
	"AU FAKCOMP AU 0 0 2669" [label="END-EVALUATE"]
	subgraph "Node 555" {
	}
	"PC FAKCOMP PC 839 839 440" -> "PC FAKCOMP PC 844 844 442" [label="evaluate when"]
	"PC FAKCOMP PC 844 844 442" [label="WHEN W-TABLE-2 NOT = SPACES"]
	subgraph "Node 556" {
	}
	"PC FAKCOMP PC 844 844 442" -> "AU FAKCOMP AU 0 855 2670" [label=true]
	"AU FAKCOMP AU 0 855 2670" [label="ADD 1 TO FAKER-INFO-CNT IN L-PARAMETER
SET FI-DX TO FAKER-INFO-CNT IN L-PARAMETER
MOVE W-TABLE-2 TO FAKER-TABLE IN L-PARAMETER ( FI-DX )
MOVE W-RANDOM-NO TO FAKER-RANDOM-NO-SUB IN L-PARAMETER ( FI-DX )
MOVE 0 TO W-FOUND-DX"]
	subgraph "Node 557" {
	}
	"AU FAKCOMP AU 0 855 2670" -> "AU FAKCOMP AU 857 67 2671" [label="sequential next"]
	"AU FAKCOMP AU 857 67 2671" [label="PERFORM SUB-9720-FIND-FORMAT THRU SUB-9720-EXIT VARYING L-F-DX-2 FROM 1 BY 1 UNTIL W-FOUND-DX > 0 OR L-F-DX-2 > L-FORMAT-ENTRY-CNT-2"]
	subgraph "Node 558" {
	}
	"AU FAKCOMP AU 857 67 2671" -> "PC FAKCOMP PC 862 862 427" [label="perform-exit"]
	"PC FAKCOMP PC 862 862 427" [label="IF W-FOUND-DX > 0"]
	"PC FAKCOMP PC 862 862 427" -> "AU FAKCOMP AU 863 68 2610" [label=true]
	"PC FAKCOMP PC 862 862 427" -> "AU FAKCOMP AU 866 73 2612" [label=false]
	"AU FAKCOMP AU 866 73 2612" [label="MOVE 'Random format not found' TO W-FAKER-FORMAT"]
	"AU FAKCOMP AU 866 73 2612" -> "AU FAKCOMP AU 828 828 2611" [label="sequential next"]
	"AU FAKCOMP AU 828 828 2611" [label="END-IF"]
	"AU FAKCOMP AU 863 68 2610" [label="MOVE L-FORMAT-ENTRY-2 ( W-FOUND-DX ) TO W-FAKER-FORMAT"]
	"AU FAKCOMP AU 863 68 2610" -> "AU FAKCOMP AU 828 828 2611" [label="sequential next"]
	subgraph "Node 559" {
	}
	"PC FAKCOMP PC 862 862 427" -> "AU FAKCOMP AU 0 0 2669" [label="sequential next"]
	"AU FAKCOMP AU 857 67 2671" -> "AU FAKCOMP AU 893 893 2672" [label="procedure call"]
	"AU FAKCOMP AU 893 893 2672" [label="SUB-9720-FIND-FORMAT .
 "]
	subgraph "Node 560" {
	}
	"AU FAKCOMP AU 893 893 2672" -> "PC FAKCOMP PC 896 896 443" [label="sequential next"]
	"PC FAKCOMP PC 896 896 443" [label="IF W-RANDOM-NO <= L-FORMAT-WEIGHT-2 ( L-F-DX-2 )"]
	subgraph "Node 561" {
	}
	"PC FAKCOMP PC 896 896 443" -> "AU FAKCOMP AU 897 81 2673" [label=true]
	"AU FAKCOMP AU 897 81 2673" [label="SET W-FOUND-DX TO L-F-DX-2
MOVE W-FOUND-DX TO FAKER-TABLE-ENTRY IN L-PARAMETER ( FI-DX )"]
	subgraph "Node 562" {
	}
	"AU FAKCOMP AU 897 81 2673" -> "AU FAKCOMP AU 888 888 2674" [label="sequential next"]
	"AU FAKCOMP AU 888 888 2674" [label="END-IF"]
	subgraph "Node 563" {
	}
	"PC FAKCOMP PC 896 896 443" -> "AU FAKCOMP AU 901 83 2675" [label=false]
	"AU FAKCOMP AU 901 83 2675" [label="SUBTRACT L-FORMAT-WEIGHT-2 ( L-F-DX-2 ) FROM W-RANDOM-NO"]
	subgraph "Node 564" {
	}
	"AU FAKCOMP AU 901 83 2675" -> "AU FAKCOMP AU 905 906 2676" [label="sequential next"]
	"AU FAKCOMP AU 905 906 2676" [label="SUB-9720-EXIT .
 
EXIT"]
	subgraph "Node 565" {
	}
	"AU FAKCOMP AU 905 906 2676" -> "AU FAKCOMP AU 857 67 2671" [label="procedure backward call"]
	"AU FAKCOMP AU 901 83 2675" -> "AU FAKCOMP AU 888 888 2674" [label="sequential next"]
	"PC FAKCOMP PC 839 839 440" -> "AU FAKCOMP AU 871 77 2677" [label=false]
	"AU FAKCOMP AU 871 77 2677" [label="MOVE 'Random format not found' TO W-FAKER-FORMAT"]
	subgraph "Node 566" {
	}
	"AU FAKCOMP AU 871 77 2677" -> "AU FAKCOMP AU 0 0 2669" [label="sequential next"]
	"AU FAKCOMP AU 834 23 2667" -> "AU FAKCOMP AU 878 878 2678" [label="procedure call"]
	"AU FAKCOMP AU 878 878 2678" [label="SUB-9710-FIND-FORMAT .
 "]
	subgraph "Node 567" {
	}
	"AU FAKCOMP AU 878 878 2678" -> "PC FAKCOMP PC 881 881 444" [label="sequential next"]
	"PC FAKCOMP PC 881 881 444" [label="IF W-RANDOM-NO <= L-FORMAT-WEIGHT-1 ( L-F-DX-1 )"]
	subgraph "Node 568" {
	}
	"PC FAKCOMP PC 881 881 444" -> "AU FAKCOMP AU 882 80 2679" [label=true]
	"AU FAKCOMP AU 882 80 2679" [label="SET W-FOUND-DX TO L-F-DX-1
MOVE W-FOUND-DX TO FAKER-TABLE-ENTRY IN L-PARAMETER ( FI-DX )"]
	subgraph "Node 569" {
	}
	"AU FAKCOMP AU 882 80 2679" -> "AU FAKCOMP AU 868 868 2680" [label="sequential next"]
	"AU FAKCOMP AU 868 868 2680" [label="END-IF"]
	subgraph "Node 570" {
	}
	"PC FAKCOMP PC 881 881 444" -> "AU FAKCOMP AU 886 69 2681" [label=false]
	"AU FAKCOMP AU 886 69 2681" [label="SUBTRACT L-FORMAT-WEIGHT-1 ( L-F-DX-1 ) FROM W-RANDOM-NO"]
	subgraph "Node 571" {
	}
	"AU FAKCOMP AU 886 69 2681" -> "AU FAKCOMP AU 890 891 2682" [label="sequential next"]
	"AU FAKCOMP AU 890 891 2682" [label="SUB-9710-EXIT .
 
EXIT"]
	subgraph "Node 572" {
	}
	"AU FAKCOMP AU 890 891 2682" -> "AU FAKCOMP AU 834 23 2667" [label="procedure backward call"]
	"AU FAKCOMP AU 886 69 2681" -> "AU FAKCOMP AU 868 868 2680" [label="sequential next"]
	"AU FAKCOMP AU 816 819 2665" -> "AU FAKCOMP AU 929 932 2627" [label="procedure call"]
	"AU FAKCOMP AU 929 932 2627" [label="SUB-9901-CALL-FAKRAND .
 
CALL W-FAKRAND-PROG USING W-FAKRAND-PARAMETER"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 934 935 2628" [label="sequential next"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 934 935 2628" [label="sequential next"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 911 911 2629" [label="procedure backward call"]
	"AU FAKCOMP AU 911 911 2629" [label="PERFORM SUB-9901-CALL-FAKRAND THRU SUB-9901-EXIT"]
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 929 932 2627" [label="procedure call"]
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 913 88 2630" [label="perform-exit"]
	"AU FAKCOMP AU 913 88 2630" [label="COMPUTE W-RANDOM-SUB = FAKRAND-RANDOM-NO * L-COMPANY-ENTRY-CNT-1 + 1
MOVE W-RANDOM-SUB TO FAKER-RANDOM-NO-SUB IN L-PARAMETER ( FI-DX ) W-FOUND-DX FAKER-TABLE-ENTRY IN L-PARAMETER ( FI-DX )
MOVE L-COMPANY-ENTRY-1 ( W-FOUND-DX ) TO W-FAKER-RESULT"]
	"AU FAKCOMP AU 934 935 2628" [label="SUB-9901-EXIT .
 
EXIT"]
	"AU FAKCOMP AU 934 935 2628" -> "AU FAKCOMP AU 911 911 2629" [label="procedure backward call"]
	subgraph "Node 573" {
	}
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 926 927 2683" [label="sequential next"]
	"AU FAKCOMP AU 926 927 2683" [label="SUB-9800-EXIT .
 
EXIT"]
	subgraph "Node 574" {
	}
	"AU FAKCOMP AU 926 927 2683" -> "AU FAKCOMP AU 609 609 2684" [label="procedure backward call"]
	"AU FAKCOMP AU 609 609 2684" [label="PERFORM SUB-9800-FIND-RANDOM-COMPANY THRU SUB-9800-EXIT"]
	subgraph "Node 575" {
	}
	"AU FAKCOMP AU 609 609 2684" -> "AU FAKCOMP AU 611 29 2685" [label="perform-exit"]
	"AU FAKCOMP AU 611 29 2685" [label="MOVE W-FAKER-RESULT TO FAKER-RESULT IN L-PARAMETER"]
	subgraph "Node 576" {
	}
	"AU FAKCOMP AU 611 29 2685" -> "AU FAKCOMP AU 615 616 2643" [label="sequential next"]
	"AU FAKCOMP AU 611 29 2685" -> "AU FAKCOMP AU 613 613 2644" [label="sequential next"]
	"AU FAKCOMP AU 609 609 2684" -> "AU FAKCOMP AU 908 908 2686" [label="procedure call"]
	"AU FAKCOMP AU 908 908 2686" [label="SUB-9800-FIND-RANDOM-COMPANY .
 "]
	subgraph "Node 577" {
	}
	"AU FAKCOMP AU 908 908 2686" -> "AU FAKCOMP AU 911 911 2629" [label="sequential next"]
	"AU FAKCOMP AU 911 911 2629" [label="PERFORM SUB-9901-CALL-FAKRAND THRU SUB-9901-EXIT"]
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 929 932 2627" [label="procedure call"]
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 913 88 2630" [label="perform-exit"]
	"AU FAKCOMP AU 913 88 2630" [label="COMPUTE W-RANDOM-SUB = FAKRAND-RANDOM-NO * L-COMPANY-ENTRY-CNT-1 + 1
MOVE W-RANDOM-SUB TO FAKER-RANDOM-NO-SUB IN L-PARAMETER ( FI-DX ) W-FOUND-DX FAKER-TABLE-ENTRY IN L-PARAMETER ( FI-DX )
MOVE L-COMPANY-ENTRY-1 ( W-FOUND-DX ) TO W-FAKER-RESULT"]
	"AU FAKCOMP AU 929 932 2627" [label="SUB-9901-CALL-FAKRAND .
 
CALL W-FAKRAND-PROG USING W-FAKRAND-PARAMETER"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 934 935 2628" [label="sequential next"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 934 935 2628" [label="sequential next"]
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 911 911 2629" [label="procedure backward call"]
	"AU FAKCOMP AU 934 935 2628" [label="SUB-9901-EXIT .
 
EXIT"]
	"AU FAKCOMP AU 934 935 2628" -> "AU FAKCOMP AU 911 911 2629" [label="procedure backward call"]
	subgraph "Node 578" {
	}
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 926 927 2683" [label="sequential next"]
	"AU FAKCOMP AU 911 911 2629" -> "AU FAKCOMP AU 926 927 2683" [label="sequential next"]
	"AU FAKCOMP AU 926 927 2683" -> "AU FAKCOMP AU 776 776 2687" [label="procedure backward call"]
	"AU FAKCOMP AU 776 776 2687" [label="PERFORM SUB-9800-FIND-RANDOM-COMPANY THRU SUB-9800-EXIT"]
	subgraph "Node 579" {
	}
	"AU FAKCOMP AU 776 776 2687" -> "AU FAKCOMP AU 908 908 2686" [label="procedure call"]
	"AU FAKCOMP AU 776 776 2687" -> "AU FAKCOMP AU 779 780 2688" [label="sequential next"]
	"AU FAKCOMP AU 779 780 2688" [label="SUB-9000-EXIT .
 
EXIT"]
	subgraph "Node 580" {
	}
	"AU FAKCOMP AU 779 780 2688" -> "AU FAKCOMP AU 671 671 2689" [label="procedure backward call"]
	"AU FAKCOMP AU 671 671 2689" [label="PERFORM SUB-9000-EXAMINE-FIND-FORMAT THRU SUB-9000-EXIT"]
	subgraph "Node 581" {
	}
	"AU FAKCOMP AU 671 671 2689" -> "PC FAKCOMP PC 673 42 428" [label="perform-exit"]
	"PC FAKCOMP PC 673 42 428" [label="IF NOT FAKER-RESPONSE-GOOD IN L-PARAMETER"]
	"PC FAKCOMP PC 673 42 428" -> "AU FAKCOMP AU 675 675 2613" [label=true]
	"PC FAKCOMP PC 673 42 428" -> "AU FAKCOMP AU 676 676 2614" [label="outside-if"]
	"AU FAKCOMP AU 676 676 2614" [label="END-IF"]
	"AU FAKCOMP AU 675 675 2613" [label="GO TO SUB-2110-EXIT"]
	subgraph "Node 582" {
	}
	"PC FAKCOMP PC 673 42 428" -> "AU FAKCOMP AU 687 688 2690" [label="procedure call"]
	"AU FAKCOMP AU 687 688 2690" [label="SUB-2110-EXIT .
 
EXIT"]
	subgraph "Node 583" {
	}
	"AU FAKCOMP AU 687 688 2690" -> "AU FAKCOMP AU 626 34 2648" [label="procedure backward call"]
	"PC FAKCOMP PC 673 42 428" -> "AU FAKCOMP AU 678 44 2691" [label="sequential next"]
	"AU FAKCOMP AU 678 44 2691" [label="STRING W-FAKER-FORMAT DELIMITED '  ' INTO W-RECURSED-FORMAT POINTER W-SUB-1-SAVE
MOVE W-RECURSED-FORMAT-REST TO W-RECURSED-FORMAT ( W-SUB-1-SAVE : )"]
	subgraph "Node 584" {
	}
	"AU FAKCOMP AU 678 44 2691" -> "AU FAKCOMP AU 687 688 2690" [label="sequential next"]
	"AU FAKCOMP AU 678 44 2691" -> "AU FAKCOMP AU 685 685 2626" [label="sequential next"]
	"AU FAKCOMP AU 685 685 2626" [label="END-IF"]
	subgraph "Node 585" {
	}
	"AU FAKCOMP AU 671 671 2689" -> "AU FAKCOMP AU 736 736 2657" [label="procedure call"]
	"AU FAKCOMP AU 779 780 2688" -> "AU FAKCOMP AU 701 701 2654" [label="procedure backward call"]
	"AU FAKCOMP AU 776 776 2687" -> "AU FAKCOMP AU 779 780 2688" [label="sequential next"]
	"AU FAKCOMP AU 776 776 2687" -> "AU FAKCOMP AU 0 0 2692" [label="perform-exit"]
	"AU FAKCOMP AU 0 0 2692" [label="END-EVALUATE"]
	subgraph "Node 586" {
	}
	"AU FAKCOMP AU 929 932 2627" -> "AU FAKCOMP AU 926 927 2683" [label="sequential next"]
	"AU FAKCOMP AU 816 819 2665" -> "AU FAKCOMP AU 875 876 2693" [label="sequential next"]
	"AU FAKCOMP AU 875 876 2693" [label="SUB-9700-EXIT .
 
EXIT"]
	subgraph "Node 587" {
	}
	"AU FAKCOMP AU 875 876 2693" -> "AU FAKCOMP AU 621 621 2646" [label="procedure backward call"]
	"AU FAKCOMP AU 875 876 2693" -> "AU FAKCOMP AU 768 768 2664" [label="procedure backward call"]
	"AU FAKCOMP AU 816 819 2665" -> "AU FAKCOMP AU 875 876 2693" [label="sequential next"]
	"AU FAKCOMP AU 768 768 2664" -> "AU FAKCOMP AU 0 0 2692" [label="perform-exit"]
	"PC FAKCOMP PC 766 766 438" -> "PC FAKCOMP PC 770 53 445" [label="evaluate when"]
	"PC FAKCOMP PC 770 53 445" [label="WHEN W-TABLE-1 = 'FIRST-NAME' OR 'LAST-NAME'"]
	subgraph "Node 588" {
	}
	"PC FAKCOMP PC 770 53 445" -> "AU FAKCOMP AU 772 54 2694" [label=true]
	"AU FAKCOMP AU 772 54 2694" [label="MOVE FAKER-RESULT IN W-FAKER-PARAMETER TO W-FAKER-RESULT"]
	subgraph "Node 589" {
	}
	"AU FAKCOMP AU 772 54 2694" -> "AU FAKCOMP AU 0 0 2692" [label="sequential next"]
	"PC FAKCOMP PC 766 766 438" -> "AU FAKCOMP AU 776 776 2687" [label=false]
	"PC FAKCOMP PC 739 739 436" -> "PC FAKCOMP PC 743 743 446" [label="evaluate when"]
	"PC FAKCOMP PC 743 743 446" [label="WHEN 'LN'"]
	subgraph "Node 590" {
	}
	"PC FAKCOMP PC 743 743 446" -> "AU FAKCOMP AU 744 744 2695" [label=true]
	"AU FAKCOMP AU 744 744 2695" [label="PERFORM SUB-9200-LAST-NAME THRU SUB-9200-EXIT"]
	subgraph "Node 591" {
	}
	"AU FAKCOMP AU 744 744 2695" -> "AU FAKCOMP AU 804 811 2622" [label="procedure call"]
	"AU FAKCOMP AU 804 811 2622" [label="SUB-9200-LAST-NAME .
 
MOVE 'LAST-NAME' TO W-TABLE-1
SET PERSON-LAST-NAME IN W-FAKER-PARAMETER TO TRUE
CALL W-FAKPERS-PROG USING W-FAKER-PARAMETER"]
	"AU FAKCOMP AU 804 811 2622" -> "AU FAKCOMP AU 813 814 2623" [label="sequential next"]
	"AU FAKCOMP AU 813 814 2623" [label="SUB-9200-EXIT .
 
EXIT"]
	subgraph "Node 592" {
	}
	"AU FAKCOMP AU 804 811 2622" -> "AU FAKCOMP AU 744 744 2695" [label="procedure backward call"]
	"AU FAKCOMP AU 744 744 2695" -> "AU FAKCOMP AU 0 0 2662" [label="perform-exit"]
	"PC FAKCOMP PC 739 739 436" -> "AU FAKCOMP AU 747 756 2696" [label=false]
	"AU FAKCOMP AU 747 756 2696" [label="MOVE SPACES TO W-TABLE-1
SET FAKER-UNKNOWN-FORMAT IN L-PARAMETER TO TRUE
STRING 'Unknown FAKCOMP format \"' W-FORMAT-ENTRY '\"' DELIMITED SIZE INTO FAKER-RESPONSE-MSG IN L-PARAMETER
GO TO SUB-9000-EXIT"]
	subgraph "Node 593" {
	}
	"AU FAKCOMP AU 747 756 2696" -> "AU FAKCOMP AU 779 780 2688" [label="procedure call"]
	"PC FAKCOMP PC 693 693 435" -> "AU FAKCOMP AU 709 46 2697" [label=false]
	"AU FAKCOMP AU 709 46 2697" [label="MOVE W-RECURSED-FORMAT-CHAR ( W-SUB-1 ) TO FAKER-RESULT IN L-PARAMETER ( W-SUB-2 : 1 )
ADD 1 TO W-SUB-1 W-SUB-2"]
	subgraph "Node 594" {
	}
	"AU FAKCOMP AU 709 46 2697" -> "AU FAKCOMP AU 715 716 2698" [label="sequential next"]
	"AU FAKCOMP AU 715 716 2698" [label="SUB-2120-EXIT .
 
EXIT"]
	subgraph "Node 595" {
	}
	"AU FAKCOMP AU 715 716 2698" -> "AU FAKCOMP AU 641 7 2651" [label="procedure backward call"]
	"AU FAKCOMP AU 709 46 2697" -> "AU FAKCOMP AU 713 713 2656" [label="sequential next"]
	"AU FAKCOMP AU 641 7 2651" -> "AU FAKCOMP AU 647 648 2649" [label="sequential next"]
	"AU FAKCOMP AU 626 34 2648" -> "AU FAKCOMP AU 650 650 2699" [label="procedure call"]
	"AU FAKCOMP AU 650 650 2699" [label="SUB-2110-RECURSE-FORMATS .
 "]
	subgraph "Node 596" {
	}
	"AU FAKCOMP AU 650 650 2699" -> "PC FAKCOMP PC 653 653 429" [label="sequential next"]
	"PC FAKCOMP PC 653 653 429" [label="IF W-RECURSED-FORMAT-CHAR ( W-SUB-1 ) NOT = W-FORMAT-START"]
	"PC FAKCOMP PC 653 653 429" -> "AU FAKCOMP AU 654 655 2615" [label=true]
	"PC FAKCOMP PC 653 653 429" -> "AU FAKCOMP AU 656 656 2616" [label="outside-if"]
	"AU FAKCOMP AU 656 656 2616" [label="END-IF"]
	"AU FAKCOMP AU 654 655 2615" [label="ADD 1 TO W-SUB-1
GO TO SUB-2110-EXIT"]
	subgraph "Node 597" {
	}
	"PC FAKCOMP PC 653 653 429" -> "AU FAKCOMP AU 687 688 2690" [label="procedure call"]
	"PC FAKCOMP PC 653 653 429" -> "AU FAKCOMP AU 658 57 2624" [label="sequential next"]
	"AU FAKCOMP AU 658 57 2624" [label="MOVE W-SUB-1 TO W-SUB-1-SAVE
ADD 1 TO W-SUB-1
UNSTRING W-RECURSED-FORMAT DELIMITED W-FORMAT-END INTO W-FORMAT-ENTRY POINTER W-SUB-1"]
	"AU FAKCOMP AU 658 57 2624" -> "PC FAKCOMP PC 666 666 431" [label="sequential next"]
	"PC FAKCOMP PC 666 666 431" [label="IF W-FORMAT-ENTRY-IS-FORMAT"]
	"PC FAKCOMP PC 666 666 431" -> "AU FAKCOMP AU 667 669 2625" [label=true]
	"PC FAKCOMP PC 666 666 431" -> "AU FAKCOMP AU 685 685 2626" [label="outside-if"]
	"AU FAKCOMP AU 685 685 2626" [label="END-IF"]
	"AU FAKCOMP AU 667 669 2625" [label="MOVE W-RECURSED-FORMAT ( W-SUB-1 : ) TO W-RECURSED-FORMAT-REST
MOVE W-SUB-1-SAVE TO W-SUB-1"]
	subgraph "Node 598" {
	}
	"AU FAKCOMP AU 658 57 2624" -> "AU FAKCOMP AU 671 671 2689" [label="sequential next"]
	"AU FAKCOMP AU 621 621 2646" -> "AU FAKCOMP AU 816 819 2665" [label="procedure call"]
	"PC FAKCOMP PC 601 601 434" -> "AU FAKCOMP AU 609 609 2684" [label=false]
	"PC FAKCOMP PC 574 574 432" -> "PC FAKCOMP PC 578 578 447" [label="evaluate when"]
	"PC FAKCOMP PC 578 578 447" [label="WHEN COMPANY-SUFFIX IN L-PARAMETER"]
	subgraph "Node 599" {
	}
	"PC FAKCOMP PC 578 578 447" -> "AU FAKCOMP AU 579 579 2661" [label=true]
	"PC FAKCOMP PC 574 574 432" -> "AU FAKCOMP AU 582 591 2700" [label=false]
	"AU FAKCOMP AU 582 591 2700" [label="SET FAKER-UNKNOWN-FUNCTION IN L-PARAMETER TO TRUE
STRING 'Unknown FAKCOMP function \"' FAKER-PROVIDER-FUNCTION IN L-PARAMETER '\"' DELIMITED SIZE INTO FAKER-RESPONSE-MSG IN L-PARAMETER
GO TO SUB-2000-EXIT"]
	subgraph "Node 600" {
	}
	"AU FAKCOMP AU 582 591 2700" -> "AU FAKCOMP AU 615 616 2643" [label="procedure call"]
	"AU FAKCOMP AU 518 518 2633" -> "AU FAKCOMP AU 527 527 2701" [label="procedure call"]
	"AU FAKCOMP AU 527 527 2701" [label="SUB-1000-START-UP .
 "]
	subgraph "Node 601" {
	}
	"AU FAKCOMP AU 527 527 2701" -> "PC FAKCOMP PC 530 530 430" [label="sequential next"]
	"PC FAKCOMP PC 530 530 430" [label="IF W-NOT-FIRST-CALL"]
	"PC FAKCOMP PC 530 530 430" -> "AU FAKCOMP AU 531 531 2617" [label=true]
	"PC FAKCOMP PC 530 530 430" -> "AU FAKCOMP AU 532 532 2618" [label="outside-if"]
	"AU FAKCOMP AU 532 532 2618" [label="END-IF"]
	"AU FAKCOMP AU 531 531 2617" [label="GO TO SUB-1000-EXIT"]
	subgraph "Node 602" {
	}
	"PC FAKCOMP PC 530 530 430" -> "AU FAKCOMP AU 548 549 2702" [label="procedure call"]
	"AU FAKCOMP AU 548 549 2702" [label="SUB-1000-EXIT .
 
EXIT"]
	subgraph "Node 603" {
	}
	"AU FAKCOMP AU 548 549 2702" -> "AU FAKCOMP AU 518 518 2633" [label="procedure backward call"]
	"PC FAKCOMP PC 530 530 430" -> "AU FAKCOMP AU 534 1 2703" [label="sequential next"]
	"AU FAKCOMP AU 534 1 2703" [label="SET W-NOT-FIRST-CALL TO TRUE
MOVE FUNCTION WHEN-COMPILED TO W-COMPILED-DATE
DISPLAY 'FAKCOMP  compiled on ' W-COMPILED-DATE-YYYY '/' W-COMPILED-DATE-MM '/' W-COMPILED-DATE-DD ' at ' W-COMPILED-TIME-HH ':' W-COMPILED-TIME-MM ':' W-COMPILED-TIME-SS"]
	subgraph "Node 604" {
	}
	"AU FAKCOMP AU 534 1 2703" -> "AU FAKCOMP AU 546 546 2704" [label="sequential next"]
	"AU FAKCOMP AU 546 546 2704" [label="PERFORM SUB-1100-SUM-WEIGHTS THRU SUB-1100-EXIT"]
	subgraph "Node 605" {
	}
	"AU FAKCOMP AU 546 546 2704" -> "AU FAKCOMP AU 551 551 2705" [label="procedure call"]
	"AU FAKCOMP AU 551 551 2705" [label="SUB-1100-SUM-WEIGHTS .
 "]
	subgraph "Node 606" {
	}
	"AU FAKCOMP AU 551 551 2705" -> "AU FAKCOMP AU 554 2 2706" [label="sequential next"]
	"AU FAKCOMP AU 554 2 2706" [label="PERFORM VARYING FC-DX FROM 1 BY 1 UNTIL FC-DX > FORMAT-COMPANY-CNT
ADD FORMAT-COMPANY-WEIGHT ( FC-DX ) TO FORMAT-COMPANY-WEIGHT-TOT"]
	subgraph "Node 607" {
	}
	"AU FAKCOMP AU 554 2 2706" -> "AU FAKCOMP AU 563 564 2707" [label="sequential next"]
	"AU FAKCOMP AU 563 564 2707" [label="SUB-1100-EXIT .
 
EXIT"]
	subgraph "Node 608" {
	}
	"AU FAKCOMP AU 563 564 2707" -> "AU FAKCOMP AU 546 546 2704" [label="procedure backward call"]
	"AU FAKCOMP AU 554 2 2706" -> "AU FAKCOMP AU 554 2 2706" [label="sequential next"]
	"AU FAKCOMP AU 546 546 2704" -> "AU FAKCOMP AU 548 549 2702" [label="sequential next"]
	node [filled=lightblue shape=circle]
	edge [color=black]
}
