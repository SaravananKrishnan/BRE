digraph cluster {
	graph [label=test]
	1 [label="MAIN .
 
"]
	2 [label="PERFORM SUB-1000-START-UP THRU SUB-1000-EXIT
"]
	4 [label="PERFORM SUB-2000-PROCESS THRU SUB-2000-EXIT
"]
	6 [label="PERFORM SUB-3000-SHUT-DOWN THRU SUB-3000-EXIT
"]
	8 [label="MAIN-EXIT .
 
"]
	9 [label=GOBACK
]
	8 -> 9 [label="sequential next"]
	6 -> 8 [label="perform-exit"]
	50 [label="SUB-3000-SHUT-DOWN .
 
"]
	52 [label="SUB-3000-EXIT .
 
"]
	53 [label=EXIT
]
	53 -> 6 [label="procedure backward call"]
	52 -> 53 [label="sequential next"]
	50 -> 52 [label="sequential next"]
	6 -> 50 [label="procedure call"]
	4 -> 6 [label="perform-exit"]
	24 [label="SUB-2000-PROCESS .
 
"]
	25 [label="MOVE 0 TO FAKER-INFO-CNT
"]
	26 [label="SET FI-DX TO FAKER-INFO-CNT
"]
	27 [label="MOVE LOW-VALUES TO FAKER-INFO-OCCS
"]
	28 [label="EVALUATE TRUE
" shape=diamond]
	30 [label="WHEN BANK-ACCOUNT
" shape=diamond]
	31 [label="PERFORM SUB-9010-ACCOUNT THRU SUB-9010-EXIT
"]
	55 [label="SUB-9010-ACCOUNT .
 
"]
	56 [label="PERFORM SUB-9901-CALL-FAKRAND THRU SUB-9901-EXIT
"]
	58 [label="COMPUTE W-RANDOM-SUB = FAKRAND-RANDOM-NO * BANK-ACCOUNT-FORMAT-CNT + 1
"]
	59 [label="SET FI-DX UP BY 1
"]
	60 [label="MOVE 'BANK-ACCOUNT' TO FAKER-TABLE ( FI-DX )
"]
	61 [label="MOVE FAKRAND-RANDOM-NO TO FAKER-RANDOM-NO-SUB ( FI-DX )
"]
	62 [label="MOVE W-RANDOM-SUB TO FAKER-TABLE-ENTRY ( FI-DX )
"]
	63 [label="MOVE BANK-ACCOUNT-FORMAT ( W-RANDOM-SUB ) TO W-FAKER-RESULT
"]
	64 [label="PERFORM SUB-9810-REPLACE-DIGIT THRU SUB-9810-EXIT VARYING W-SUB-D FROM 1 BY 1 UNTIL W-SUB-D > LENGTH OF BANK-ACCOUNT-FORMAT
"]
	96 [label="SUB-9810-REPLACE-DIGIT .
 
"]
	97 [label="IF W-FAKER-RESULT ( W-SUB-D : 1 ) NOT = W-HASH AND W-PERCENT
" shape=diamond]
	98 [label="GO TO SUB-9810-EXIT
"]
	112 [label="SUB-9810-EXIT .
 
"]
	113 [label=EXIT
]
	113 -> 64 [label="procedure backward call"]
	79 [label="PERFORM SUB-9810-REPLACE-DIGIT THRU SUB-9810-EXIT VARYING W-SUB-D FROM 1 BY 1 UNTIL W-SUB-D > LENGTH OF BANK-ACCOUNT-FORMAT
"]
	81 [label="MOVE W-FAKER-RESULT TO W-BANK-ROUTING
"]
	82 [label="COMPUTE W-PRODUCTS = ( W-BANK-ROUTING-DIG ( 1 ) + W-BANK-ROUTING-DIG ( 4 ) + W-BANK-ROUTING-DIG ( 7 ) ) * 3 + ( W-BANK-ROUTING-DIG ( 2 ) + W-BANK-ROUTING-DIG ( 5 ) + W-BANK-ROUTING-DIG ( 8 ) ) * 7 + W-BANK-ROUTING-DIG ( 3 ) + W-BANK-ROUTING-DIG ( 6 )
"]
	83 [label="DIVIDE W-PRODUCTS BY 10 GIVING W-QUOTIENT REMAINDER W-REMAINDER
"]
	84 [label="IF W-REMAINDER = 0
" shape=diamond]
	85 [label="MOVE 0 TO W-CHECK-DIGIT
"]
	86 [label="END-IF
"]
	90 [label="MOVE W-CHECK-DIGIT TO W-BANK-ROUTING-DIG ( 9 )
"]
	91 [label="MOVE W-BANK-ROUTING TO W-FAKER-RESULT
"]
	93 [label="SUB-9020-EXIT .
 
"]
	94 [label=EXIT
]
	36 [label="PERFORM SUB-9020-ROUTING THRU SUB-9020-EXIT
"]
	70 [label="SUB-9020-ROUTING .
 
"]
	71 [label="PERFORM SUB-9901-CALL-FAKRAND THRU SUB-9901-EXIT
"]
	73 [label="COMPUTE W-RANDOM-SUB = FAKRAND-RANDOM-NO * BANK-ROUTING-FORMAT-CNT + 1
"]
	74 [label="SET FI-DX UP BY 1
"]
	75 [label="MOVE 'BANK-ROUTING' TO FAKER-TABLE ( FI-DX )
"]
	76 [label="MOVE FAKRAND-RANDOM-NO TO FAKER-RANDOM-NO-SUB ( FI-DX )
"]
	77 [label="MOVE W-RANDOM-SUB TO FAKER-TABLE-ENTRY ( FI-DX )
"]
	78 [label="MOVE BANK-ROUTING-FORMAT ( W-RANDOM-SUB ) TO W-FAKER-RESULT
"]
	78 -> 79 [label="sequential next"]
	77 -> 78 [label="sequential next"]
	76 -> 77 [label="sequential next"]
	75 -> 76 [label="sequential next"]
	74 -> 75 [label="sequential next"]
	73 -> 74 [label="sequential next"]
	71 -> 73 [label="perform-exit"]
	115 [label="SUB-9901-CALL-FAKRAND .
 
"]
	116 [label="CALL W-FAKRAND-PROG USING W-FAKRAND-PARAMETER
"]
	118 [label="SUB-9901-EXIT .
 
"]
	119 [label=EXIT
]
	119 -> 56 [label="procedure backward call"]
	119 -> 71 [label="procedure backward call"]
	102 [label="PERFORM SUB-9901-CALL-FAKRAND THRU SUB-9901-EXIT
"]
	104 [label="IF W-FAKER-RESULT ( W-SUB-D : 1 ) = W-PERCENT
" shape=diamond]
	105 [label="COMPUTE W-RANDOM-DIG = FAKRAND-RANDOM-NO * 9 + 1
"]
	106 [label="END-IF
"]
	110 [label="MOVE W-RANDOM-DIG TO W-FAKER-RESULT ( W-SUB-D : 1 )
"]
	110 -> 112 [label="sequential next"]
	110 -> 112 [label="sequential next"]
	106 -> 110 [label="sequential next"]
	105 -> 106 [label="sequential next"]
	104 -> 105 [label=true]
	107 [label="COMPUTE W-RANDOM-DIG = FAKRAND-RANDOM-NO * 10
"]
	107 -> 106 [label="sequential next"]
	104 -> 107 [label=false]
	102 -> 104 [label="perform-exit"]
	102 -> 115 [label="procedure call"]
	119 -> 102 [label="procedure backward call"]
	118 -> 119 [label="sequential next"]
	116 -> 118 [label="sequential next"]
	116 -> 118 [label="sequential next"]
	116 -> 118 [label="sequential next"]
	115 -> 116 [label="sequential next"]
	71 -> 115 [label="procedure call"]
	70 -> 71 [label="sequential next"]
	36 -> 70 [label="procedure call"]
	29 [label="END-EVALUATE
"]
	44 [label="SET FAKER-INFO-CNT TO FI-DX
"]
	45 [label="MOVE W-FAKER-RESULT TO FAKER-RESULT
"]
	47 [label="SUB-2000-EXIT .
 
"]
	48 [label=EXIT
]
	48 -> 4 [label="procedure backward call"]
	47 -> 48 [label="sequential next"]
	45 -> 47 [label="sequential next"]
	44 -> 45 [label="sequential next"]
	29 -> 44 [label="sequential next"]
	36 -> 29 [label="perform-exit"]
	94 -> 36 [label="procedure backward call"]
	93 -> 94 [label="sequential next"]
	91 -> 93 [label="sequential next"]
	90 -> 91 [label="sequential next"]
	86 -> 90 [label="sequential next"]
	85 -> 86 [label="sequential next"]
	84 -> 85 [label=true]
	87 [label="SUBTRACT W-REMAINDER FROM 10 GIVING W-CHECK-DIGIT
"]
	87 -> 86 [label="sequential next"]
	84 -> 87 [label=false]
	83 -> 84 [label="sequential next"]
	82 -> 83 [label="sequential next"]
	81 -> 82 [label="sequential next"]
	79 -> 81 [label="perform-exit"]
	79 -> 96 [label="procedure call"]
	113 -> 79 [label="procedure backward call"]
	112 -> 113 [label="sequential next"]
	98 -> 112 [label="procedure call"]
	97 -> 98 [label=true]
	99 [label="END-IF
"]
	99 -> 102 [label="sequential next"]
	97 -> 99 [label="outside-if"]
	96 -> 97 [label="sequential next"]
	64 -> 96 [label="procedure call"]
	67 [label="SUB-9010-EXIT .
 
"]
	68 [label=EXIT
]
	68 -> 31 [label="procedure backward call"]
	67 -> 68 [label="sequential next"]
	64 -> 67 [label="sequential next"]
	63 -> 64 [label="sequential next"]
	62 -> 63 [label="sequential next"]
	61 -> 62 [label="sequential next"]
	60 -> 61 [label="sequential next"]
	59 -> 60 [label="sequential next"]
	58 -> 59 [label="sequential next"]
	56 -> 58 [label="perform-exit"]
	56 -> 115 [label="procedure call"]
	55 -> 56 [label="sequential next"]
	31 -> 55 [label="procedure call"]
	31 -> 29 [label="perform-exit"]
	30 -> 31 [label=true]
	28 -> 30 [label="evaluate when"]
	35 [label="WHEN BANK-ROUTING
" shape=diamond]
	35 -> 36 [label=true]
	28 -> 35 [label="evaluate when"]
	40 [label="SET FAKER-UNKNOWN-FUNCTION IN L-PARAMETER TO TRUE
"]
	41 [label="STRING 'Unknown FAKBANK function \"' FAKER-PROVIDER-FUNCTION IN L-PARAMETER '\"' DELIMITED SIZE INTO FAKER-RESPONSE-MSG IN L-PARAMETER
"]
	42 [label="GO TO SUB-2000-EXIT
"]
	42 -> 47 [label="procedure call"]
	41 -> 42 [label="sequential next"]
	40 -> 41 [label="sequential next"]
	28 -> 40 [label=false]
	27 -> 28 [label="sequential next"]
	26 -> 27 [label="sequential next"]
	25 -> 26 [label="sequential next"]
	24 -> 25 [label="sequential next"]
	4 -> 24 [label="procedure call"]
	2 -> 4 [label="perform-exit"]
	11 [label="SUB-1000-START-UP .
 
"]
	12 [label="IF W-NOT-FIRST-CALL
" shape=diamond]
	13 [label="GO TO SUB-1000-EXIT
"]
	21 [label="SUB-1000-EXIT .
 
"]
	22 [label=EXIT
]
	22 -> 2 [label="procedure backward call"]
	21 -> 22 [label="sequential next"]
	13 -> 21 [label="procedure call"]
	12 -> 13 [label=true]
	14 [label="END-IF
"]
	17 [label="SET W-NOT-FIRST-CALL TO TRUE
"]
	18 [label="MOVE FUNCTION WHEN-COMPILED TO W-COMPILED-DATE
"]
	19 [label="DISPLAY 'FAKBANK  compiled on ' W-COMPILED-DATE-YYYY '/' W-COMPILED-DATE-MM '/' W-COMPILED-DATE-DD ' at ' W-COMPILED-TIME-HH ':' W-COMPILED-TIME-MM ':' W-COMPILED-TIME-SS
"]
	19 -> 21 [label="sequential next"]
	18 -> 19 [label="sequential next"]
	17 -> 18 [label="sequential next"]
	14 -> 17 [label="sequential next"]
	12 -> 14 [label="outside-if"]
	11 -> 12 [label="sequential next"]
	2 -> 11 [label="procedure call"]
	1 -> 2 [label="sequential next"]
}
