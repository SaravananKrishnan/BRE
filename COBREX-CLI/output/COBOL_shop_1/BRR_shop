digraph {
	"AU shop AU 0 0 150" [label=Begin]
	subgraph "Node 0" {
	}
	"AU shop AU 0 0 150" -> "AU shop AU 30 30 151" [label=start]
	"AU shop AU 30 30 151" [label="INIT .
 "]
	subgraph "Node 1" {
	}
	"AU shop AU 30 30 151" -> "PC shop PC 32 32 23" [label="sequential next"]
	"PC shop PC 32 32 23" [label="IF OP = 1"]
	subgraph "Node 2" {
	}
	"PC shop PC 32 32 23" -> "AU shop AU 33 33 152" [label=true]
	"AU shop AU 33 33 152" [label="DISPLAY \"SHOP IS OPEN\""]
	subgraph "Node 3" {
	}
	"AU shop AU 33 33 152" -> "AU shop AU 34 34 146" [label="sequential next"]
	"AU shop AU 34 34 146" [label="PERFORM INIT-PRD THROUGH INIT-PRD-FN"]
	"AU shop AU 34 34 146" -> "AU shop AU 138 148 147" [label="procedure call"]
	"AU shop AU 138 148 147" [label="INIT-PRD .
 
COMPUTE QT-VEG = FUNCTION RANDOM ( 1 ) * 10
COMPUTE QT-MEAT = FUNCTION RANDOM ( 1 ) * 10
COMPUTE QT-BREAD = FUNCTION RANDOM ( 1 ) * 10
COMPUTE QT-MILK = FUNCTION RANDOM ( 1 ) * 10
COMPUTE QT-FRUIT = FUNCTION RANDOM ( 1 ) * 10
COMPUTE PR-VEG = FUNCTION RANDOM ( 1 ) * 10 + 3
COMPUTE PR-MEAT = FUNCTION RANDOM ( 1 ) * 10 + 5
COMPUTE PR-BREAD = FUNCTION RANDOM ( 1 ) * 10 + 1
COMPUTE PR-MILK = FUNCTION RANDOM ( 1 ) * 10 + 2
COMPUTE PR-FRUIT = FUNCTION RANDOM ( 1 ) * 10 + 1"]
	"AU shop AU 138 148 147" -> "AU shop AU 151 152 148" [label="sequential next"]
	"AU shop AU 151 152 148" [label="INIT-PRD-FN .
 
EXIT"]
	"AU shop AU 151 152 148" -> "AU shop AU 34 34 146" [label="procedure backward call"]
	subgraph "Node 4" {
	}
	"AU shop AU 34 34 146" -> "AU shop AU 35 35 153" [label="perform-exit"]
	"AU shop AU 35 35 153" [label="GO TO INIT-FN"]
	subgraph "Node 5" {
	}
	"AU shop AU 35 35 153" -> "AU shop AU 41 42 154" [label="procedure call"]
	"AU shop AU 41 42 154" [label="INIT-FN .
 
EXIT"]
	subgraph "Node 6" {
	}
	"AU shop AU 41 42 154" -> "AU shop AU 43 43 155" [label="sequential next"]
	"AU shop AU 43 43 155" [label="BUY-VEG .
 "]
	subgraph "Node 7" {
	}
	"AU shop AU 43 43 155" -> "AU shop AU 44 44 156" [label="sequential next"]
	"AU shop AU 44 44 156" [label="PERFORM ISNEEDED THROUGH ISNEEDED-FN"]
	subgraph "Node 8" {
	}
	"AU shop AU 44 44 156" -> "PC shop PC 45 45 18" [label="perform-exit"]
	"PC shop PC 45 45 18" [label="IF NEED = 1 AND QT-VEG > 0"]
	"PC shop PC 45 45 18" -> "PC shop PC 46 46 12" [label=true]
	"PC shop PC 45 45 18" -> "AU shop AU 54 54 141" [label=false]
	"AU shop AU 54 54 141" [label="GO TO BUY-MEAT"]
	"PC shop PC 46 46 12" [label="IF MONEY > PR-VEG AND BAG < MAX-CAP"]
	"PC shop PC 46 46 12" -> "AU shop AU 47 49 124" [label=true]
	"PC shop PC 46 46 12" -> "AU shop AU 51 51 126" [label=false]
	"AU shop AU 51 51 126" [label="GO TO PRINT"]
	"AU shop AU 47 49 124" [label="ADD 1 TO BAG
COMPUTE MONEY = MONEY - PR-VEG
SUBTRACT 1 FROM QT-VEG"]
	"AU shop AU 47 49 124" -> "AU shop AU 52 52 125" [label="sequential next"]
	"AU shop AU 52 52 125" [label="END-IF"]
	subgraph "Node 9" {
	}
	"PC shop PC 45 45 18" -> "AU shop AU 55 55 157" [label="sequential next"]
	"AU shop AU 55 55 157" [label="END-IF"]
	subgraph "Node 10" {
	}
	"AU shop AU 55 55 157" -> "AU shop AU 56 57 158" [label="sequential next"]
	"AU shop AU 56 57 158" [label="BUY-VEG-FN .
 
EXIT"]
	subgraph "Node 11" {
	}
	"AU shop AU 56 57 158" -> "AU shop AU 58 58 159" [label="sequential next"]
	"AU shop AU 58 58 159" [label="BUY-MEAT .
 "]
	subgraph "Node 12" {
	}
	"AU shop AU 58 58 159" -> "AU shop AU 59 59 160" [label="sequential next"]
	"AU shop AU 59 59 160" [label="PERFORM ISNEEDED THROUGH ISNEEDED-FN"]
	subgraph "Node 13" {
	}
	"AU shop AU 59 59 160" -> "PC shop PC 60 60 19" [label="perform-exit"]
	"PC shop PC 60 60 19" [label="IF NEED = 1 AND QT-MEAT > 0"]
	"PC shop PC 60 60 19" -> "PC shop PC 61 61 13" [label=true]
	"PC shop PC 60 60 19" -> "AU shop AU 69 69 142" [label=false]
	"AU shop AU 69 69 142" [label="GO TO BUY-BREAD"]
	"PC shop PC 61 61 13" [label="IF MONEY > PR-MEAT AND BAG < MAX-CAP"]
	"PC shop PC 61 61 13" -> "AU shop AU 62 64 127" [label=true]
	"PC shop PC 61 61 13" -> "AU shop AU 66 66 129" [label=false]
	"AU shop AU 66 66 129" [label="GO TO PRINT"]
	"AU shop AU 62 64 127" [label="ADD 1 TO BAG
COMPUTE MONEY = MONEY - PR-MEAT
SUBTRACT 1 FROM QT-MEAT"]
	"AU shop AU 62 64 127" -> "AU shop AU 67 67 128" [label="sequential next"]
	"AU shop AU 67 67 128" [label="END-IF"]
	subgraph "Node 14" {
	}
	"PC shop PC 60 60 19" -> "AU shop AU 70 70 161" [label="sequential next"]
	"AU shop AU 70 70 161" [label="END-IF"]
	subgraph "Node 15" {
	}
	"AU shop AU 70 70 161" -> "AU shop AU 71 72 162" [label="sequential next"]
	"AU shop AU 71 72 162" [label="BUY-MEAT-FN .
 
EXIT"]
	subgraph "Node 16" {
	}
	"AU shop AU 71 72 162" -> "AU shop AU 73 73 163" [label="sequential next"]
	"AU shop AU 73 73 163" [label="BUY-BREAD .
 "]
	subgraph "Node 17" {
	}
	"AU shop AU 73 73 163" -> "AU shop AU 74 74 164" [label="sequential next"]
	"AU shop AU 74 74 164" [label="PERFORM ISNEEDED THROUGH ISNEEDED-FN"]
	subgraph "Node 18" {
	}
	"AU shop AU 74 74 164" -> "PC shop PC 75 75 20" [label="perform-exit"]
	"PC shop PC 75 75 20" [label="IF NEED = 1 AND QT-BREAD > 0"]
	"PC shop PC 75 75 20" -> "PC shop PC 76 76 14" [label=true]
	"PC shop PC 75 75 20" -> "AU shop AU 84 84 143" [label=false]
	"AU shop AU 84 84 143" [label="GO TO BUY-MILK"]
	"PC shop PC 76 76 14" [label="IF MONEY > PR-BREAD AND BAG < MAX-CAP"]
	"PC shop PC 76 76 14" -> "AU shop AU 77 79 130" [label=true]
	"PC shop PC 76 76 14" -> "AU shop AU 81 81 132" [label=false]
	"AU shop AU 81 81 132" [label="GO TO PRINT"]
	"AU shop AU 77 79 130" [label="ADD 1 TO BAG
COMPUTE MONEY = MONEY - PR-BREAD
SUBTRACT 1 FROM QT-BREAD"]
	"AU shop AU 77 79 130" -> "AU shop AU 82 82 131" [label="sequential next"]
	"AU shop AU 82 82 131" [label="END-IF"]
	subgraph "Node 19" {
	}
	"PC shop PC 75 75 20" -> "AU shop AU 85 85 165" [label="sequential next"]
	"AU shop AU 85 85 165" [label="END-IF"]
	subgraph "Node 20" {
	}
	"AU shop AU 85 85 165" -> "AU shop AU 86 87 166" [label="sequential next"]
	"AU shop AU 86 87 166" [label="BUY-BREAD-FN .
 
EXIT"]
	subgraph "Node 21" {
	}
	"AU shop AU 86 87 166" -> "AU shop AU 88 88 167" [label="sequential next"]
	"AU shop AU 88 88 167" [label="BUY-MILK .
 "]
	subgraph "Node 22" {
	}
	"AU shop AU 88 88 167" -> "AU shop AU 89 89 168" [label="sequential next"]
	"AU shop AU 89 89 168" [label="PERFORM ISNEEDED THRU ISNEEDED-FN"]
	subgraph "Node 23" {
	}
	"AU shop AU 89 89 168" -> "PC shop PC 90 90 21" [label="perform-exit"]
	"PC shop PC 90 90 21" [label="IF NEED = 1 AND QT-MILK > 0"]
	"PC shop PC 90 90 21" -> "PC shop PC 91 91 15" [label=true]
	"PC shop PC 90 90 21" -> "AU shop AU 99 99 144" [label=false]
	"AU shop AU 99 99 144" [label="GO TO BUY-FRUIT"]
	"PC shop PC 91 91 15" [label="IF MONEY > PR-MILK AND BAG < MAX-CAP"]
	"PC shop PC 91 91 15" -> "AU shop AU 92 94 133" [label=true]
	"PC shop PC 91 91 15" -> "AU shop AU 96 96 135" [label=false]
	"AU shop AU 96 96 135" [label="GO TO PRINT"]
	"AU shop AU 92 94 133" [label="ADD 1 TO BAG
COMPUTE MONEY = MONEY - PR-MILK
SUBTRACT 1 FROM QT-MILK"]
	"AU shop AU 92 94 133" -> "AU shop AU 97 97 134" [label="sequential next"]
	"AU shop AU 97 97 134" [label="END-IF"]
	subgraph "Node 24" {
	}
	"PC shop PC 90 90 21" -> "AU shop AU 100 100 169" [label="sequential next"]
	"AU shop AU 100 100 169" [label="END-IF"]
	subgraph "Node 25" {
	}
	"AU shop AU 100 100 169" -> "AU shop AU 101 102 170" [label="sequential next"]
	"AU shop AU 101 102 170" [label="BUY-MILK-FN .
 
EXIT"]
	subgraph "Node 26" {
	}
	"AU shop AU 101 102 170" -> "AU shop AU 103 103 171" [label="sequential next"]
	"AU shop AU 103 103 171" [label="BUY-FRUIT .
 "]
	subgraph "Node 27" {
	}
	"AU shop AU 103 103 171" -> "AU shop AU 104 104 172" [label="sequential next"]
	"AU shop AU 104 104 172" [label="PERFORM ISNEEDED THRU ISNEEDED-FN"]
	subgraph "Node 28" {
	}
	"AU shop AU 104 104 172" -> "PC shop PC 105 105 22" [label="perform-exit"]
	"PC shop PC 105 105 22" [label="IF NEED = 1 AND QT-FRUIT > 0"]
	"PC shop PC 105 105 22" -> "PC shop PC 106 106 16" [label=true]
	"PC shop PC 105 105 22" -> "AU shop AU 114 114 145" [label=false]
	"AU shop AU 114 114 145" [label="GO TO CHECK"]
	"PC shop PC 106 106 16" [label="IF MONEY > PR-FRUIT AND BAG < MAX-CAP"]
	"PC shop PC 106 106 16" -> "AU shop AU 107 109 136" [label=true]
	"PC shop PC 106 106 16" -> "AU shop AU 111 111 138" [label=false]
	"AU shop AU 111 111 138" [label="GO TO PRINT"]
	"AU shop AU 107 109 136" [label="ADD 1 TO BAG
COMPUTE MONEY = MONEY - PR-FRUIT
SUBTRACT 1 FROM QT-FRUIT"]
	"AU shop AU 107 109 136" -> "AU shop AU 112 112 137" [label="sequential next"]
	"AU shop AU 112 112 137" [label="END-IF"]
	subgraph "Node 29" {
	}
	"PC shop PC 105 105 22" -> "AU shop AU 115 115 173" [label="sequential next"]
	"AU shop AU 115 115 173" [label="END-IF"]
	subgraph "Node 30" {
	}
	"AU shop AU 115 115 173" -> "AU shop AU 116 117 174" [label="sequential next"]
	"AU shop AU 116 117 174" [label="BUY-FRUIT-FN .
 
EXIT"]
	subgraph "Node 31" {
	}
	"AU shop AU 116 117 174" -> "AU shop AU 118 118 149" [label="sequential next"]
	"AU shop AU 118 118 149" [label="CHECK .
 "]
	"AU shop AU 118 118 149" -> "PC shop PC 119 119 17" [label="sequential next"]
	"PC shop PC 119 119 17" [label="IF MONEY <= 0 OR BAG >= MAX-CAP"]
	"PC shop PC 119 119 17" -> "AU shop AU 120 120 139" [label=true]
	"PC shop PC 119 119 17" -> "AU shop AU 122 122 140" [label=false]
	"AU shop AU 122 122 140" [label="GO TO BUY-VEG"]
	"AU shop AU 120 120 139" [label="GO TO PRINT"]
	subgraph "Node 32" {
	}
	"AU shop AU 118 118 149" -> "AU shop AU 126 129 175" [label="procedure call"]
	"AU shop AU 126 129 175" [label="PRINT .
 
MOVE MONEY TO REST
DISPLAY \"REST:\" MONEY
DISPLAY \"NB OF PRODUCTS:\" BAG"]
	subgraph "Node 33" {
	}
	"AU shop AU 126 129 175" -> "AU shop AU 130 131 176" [label="sequential next"]
	"AU shop AU 130 131 176" [label="FIN .
 
STOP RUN"]
	subgraph "Node 34" {
	}
	"AU shop AU 118 118 149" -> "AU shop AU 43 43 155" [label="procedure call"]
	"PC shop PC 105 105 22" -> "AU shop AU 126 129 175" [label="procedure call"]
	"PC shop PC 105 105 22" -> "AU shop AU 118 118 149" [label="procedure call"]
	"AU shop AU 104 104 172" -> "AU shop AU 133 134 177" [label="procedure call"]
	"AU shop AU 133 134 177" [label="ISNEEDED .
 
COMPUTE NEED = FUNCTION RANDOM ( 1 ) * 2"]
	subgraph "Node 35" {
	}
	"AU shop AU 133 134 177" -> "AU shop AU 135 136 178" [label="sequential next"]
	"AU shop AU 135 136 178" [label="ISNEEDED-FN .
 
EXIT"]
	subgraph "Node 36" {
	}
	"AU shop AU 135 136 178" -> "AU shop AU 44 44 156" [label="procedure backward call"]
	"AU shop AU 135 136 178" -> "AU shop AU 59 59 160" [label="procedure backward call"]
	"AU shop AU 135 136 178" -> "AU shop AU 74 74 164" [label="procedure backward call"]
	"AU shop AU 135 136 178" -> "AU shop AU 89 89 168" [label="procedure backward call"]
	"AU shop AU 135 136 178" -> "AU shop AU 104 104 172" [label="procedure backward call"]
	"AU shop AU 133 134 177" -> "AU shop AU 135 136 178" [label="sequential next"]
	"AU shop AU 133 134 177" -> "AU shop AU 135 136 178" [label="sequential next"]
	"AU shop AU 133 134 177" -> "AU shop AU 135 136 178" [label="sequential next"]
	"AU shop AU 133 134 177" -> "AU shop AU 135 136 178" [label="sequential next"]
	"PC shop PC 90 90 21" -> "AU shop AU 126 129 175" [label="procedure call"]
	"PC shop PC 90 90 21" -> "AU shop AU 103 103 171" [label="procedure call"]
	"AU shop AU 89 89 168" -> "AU shop AU 133 134 177" [label="procedure call"]
	"PC shop PC 75 75 20" -> "AU shop AU 126 129 175" [label="procedure call"]
	"PC shop PC 75 75 20" -> "AU shop AU 88 88 167" [label="procedure call"]
	"AU shop AU 74 74 164" -> "AU shop AU 133 134 177" [label="procedure call"]
	"PC shop PC 60 60 19" -> "AU shop AU 126 129 175" [label="procedure call"]
	"PC shop PC 60 60 19" -> "AU shop AU 73 73 163" [label="procedure call"]
	"AU shop AU 59 59 160" -> "AU shop AU 133 134 177" [label="procedure call"]
	"PC shop PC 45 45 18" -> "AU shop AU 126 129 175" [label="procedure call"]
	"PC shop PC 45 45 18" -> "AU shop AU 58 58 159" [label="procedure call"]
	"AU shop AU 44 44 156" -> "AU shop AU 133 134 177" [label="procedure call"]
	"PC shop PC 32 32 23" -> "AU shop AU 37 38 179" [label=false]
	"AU shop AU 37 38 179" [label="DISPLAY \"SHOP IS CLOSED\"
GO TO INIT"]
	subgraph "Node 37" {
	}
	"AU shop AU 37 38 179" -> "AU shop AU 30 30 151" [label="procedure call"]
	node [filled=lightblue shape=circle]
	edge [color=black]
}
