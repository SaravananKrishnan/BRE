digraph cluster {
	graph [label=test]
	1 [label="MOVE \"X\" TO WS-PLAYER
"]
	2 [label="PERFORM GAME-LOOP-PARAGRAPH WITH TEST AFTER UNTIL FINISHED-PLAYING
"]
	4 [label="STOP RUN
"]
	2 -> 4 [label="perform-exit"]
	5 [label="GAME-LOOP-PARAGRAPH .
 
"]
	6 [label="INITIALIZE WS-GAME-GRID
"]
	7 [label="INITIALIZE WS-STATE
"]
	8 [label="INITIALIZE WS-MOVES
"]
	9 [label="MOVE \"Make a move like 'A2'\" TO WS-MESSAGE
"]
	10 [label="PERFORM GAME-FRAME-PARAGRAPH WITH TEST AFTER UNTIL GAME-OVER
"]
	12 [label="ADD 1 TO WS-GAMES
"]
	147 [label="EVALUATE WS-STATE
" shape=diamond]
	149 [label="WHEN \"WIN\"
" shape=diamond]
	150 [label="ADD 1 TO WS-WINS
"]
	152 [label="MOVE WS-COLOR-BLACK TO WS-FG
"]
	153 [label="MOVE WS-COLOR-BLACK TO WS-FG-CELL
"]
	154 [label="MOVE WS-COLOR-GREEN TO WS-BG
"]
	148 [label="END-EVALUATE
"]
	166 [label="MOVE \"One more (y/n)? \" TO WS-INSTRUCTION
"]
	167 [label="MOVE \"y\" TO WS-NEXT-MOVE
"]
	168 [label="DISPLAY BOARD-SCREEN END-DISPLAY
"]
	169 [label="ACCEPT BOARD-SCREEN
"]
	169 -> 2 [label="sequential next"]
	168 -> 169 [label="sequential next"]
	167 -> 168 [label="sequential next"]
	166 -> 167 [label="sequential next"]
	148 -> 166 [label="sequential next"]
	154 -> 148 [label="sequential next"]
	153 -> 154 [label="sequential next"]
	152 -> 153 [label="sequential next"]
	150 -> 152 [label="sequential next"]
	149 -> 150 [label=true]
	147 -> 149 [label="evaluate when"]
	156 [label="WHEN \"STALE\"
" shape=diamond]
	157 [label="MOVE WS-COLOR-BLACK TO WS-FG
"]
	159 [label="MOVE WS-COLOR-BLACK TO WS-FG-CELL
"]
	160 [label="MOVE WS-COLOR-BLUE TO WS-BG
"]
	160 -> 148 [label="sequential next"]
	159 -> 160 [label="sequential next"]
	157 -> 159 [label="sequential next"]
	156 -> 157 [label=true]
	147 -> 156 [label="evaluate when"]
	162 [label="MOVE WS-COLOR-BLACK TO WS-FG
"]
	163 [label="MOVE WS-COLOR-BLACK TO WS-FG-CELL
"]
	164 [label="MOVE WS-COLOR-RED TO WS-BG
"]
	164 -> 148 [label="sequential next"]
	163 -> 164 [label="sequential next"]
	162 -> 163 [label="sequential next"]
	147 -> 162 [label=false]
	12 -> 147 [label="sequential next"]
	10 -> 12 [label="perform-exit"]
	13 [label="GAME-FRAME-PARAGRAPH .
 
"]
	14 [label="MOVE \"Move to square: \" TO WS-INSTRUCTION
"]
	15 [label="MOVE WS-COLOR-GREEN TO WS-FG
"]
	16 [label="MOVE WS-COLOR-WHITE TO WS-FG-CELL
"]
	17 [label="MOVE WS-COLOR-BLACK TO WS-BG
"]
	18 [label="INITIALIZE WS-MOVE-OUTCOME
"]
	19 [label="IF COMPUTER-PLAYER
" shape=diamond]
	20 [label="INITIALIZE WS-COMPUTER-MOVED
"]
	23 [label="PERFORM UNTIL COMPUTER-MOVED
"]
	24 [label="COMPUTE WS-ROW = FUNCTION RANDOM * 3 + 1
"]
	26 [label="COMPUTE WS-COL = FUNCTION RANDOM * 3 + 1
"]
	27 [label="IF WS-CELL ( WS-ROW , WS-COL ) IS EQUAL TO \" \"
" shape=diamond]
	28 [label="SET WS-COMPUTER-MOVED TO 1
"]
	31 [label="MOVE WS-PLAYER TO WS-CELL ( WS-ROW , WS-COL )
"]
	29 [label="END-IF
"]
	29 -> 23 [label="sequential next"]
	31 -> 29 [label="sequential next"]
	28 -> 31 [label="sequential next"]
	27 -> 28 [label=true]
	27 -> 29 [label="outside-if"]
	26 -> 27 [label="sequential next"]
	24 -> 26 [label="sequential next"]
	23 -> 24 [label=iteration]
	21 [label="END-IF
"]
	60 [label="MOVE WS-GAME-GRID TO WS-FLAT-GAME-GRID
"]
	61 [label="IF HUMAN-PLAYER
" shape=diamond]
	62 [label="INSPECT WS-FLAT-GAME-GRID REPLACING ALL \"X\" BY \"1\"
"]
	65 [label="INSPECT WS-FLAT-GAME-GRID REPLACING ALL \"O\" BY \"0\"
"]
	63 [label="END-IF
"]
	69 [label="INSPECT WS-FLAT-GAME-GRID REPLACING ALL \" \" BY \"0\"
"]
	70 [label="INITIALIZE WS-EOF
"]
	71 [label="OPEN INPUT FD-WINMASKS
"]
	72 [label="PERFORM UNTIL EOF OR MOVE-COMPLETE
"]
	73 [label="READ FD-WINMASKS NEXT RECORD
"]
	76 [label="SET WS-EOF TO 1
"]
	76 -> 72 [label="sequential next"]
	73 -> 76 [label=AtEnd]
	78 [label="PERFORM VALIDATE-WIN-PARAGRAPH
"]
	81 [label="VALIDATE-WIN-PARAGRAPH .
 
"]
	82 [label="INITIALIZE WS-MASK-DETECTED
"]
	83 [label="SET WS-DETECT-LOOP-COUNT TO 1
"]
	84 [label="PERFORM 9 TIMES
"]
	85 [label="IF FD-WINMASK ( WS-DETECT-LOOP-COUNT : 1 ) IS EQUAL TO WS-FLAT-GAME-GRID ( WS-DETECT-LOOP-COUNT : 1 ) AND IS EQUAL TO 1
" shape=diamond]
	87 [label="ADD 1 TO WS-MASK-DETECTED
"]
	88 [label="END-IF
"]
	91 [label="ADD 1 TO WS-DETECT-LOOP-COUNT
"]
	91 -> 84 [label="sequential next"]
	88 -> 91 [label="sequential next"]
	87 -> 88 [label="sequential next"]
	85 -> 87 [label=true]
	85 -> 88 [label="outside-if"]
	84 -> 85 [label=iteration]
	86 [label="IF WIN-DETECTED
" shape=diamond]
	93 [label="IF HUMAN-PLAYER
" shape=diamond]
	96 [label="MOVE \"WIN\" TO WS-MOVE-OUTCOME
"]
	97 [label="END-IF
"]
	94 [label="END-IF
"]
	94 -> 78 [label="sequential next"]
	97 -> 94 [label="sequential next"]
	96 -> 97 [label="sequential next"]
	93 -> 96 [label=true]
	98 [label="MOVE \"LOSE\" TO WS-MOVE-OUTCOME
"]
	98 -> 97 [label="sequential next"]
	93 -> 98 [label=false]
	86 -> 93 [label=true]
	86 -> 94 [label="outside-if"]
	84 -> 86 [label="perform-exit"]
	83 -> 84 [label="sequential next"]
	82 -> 83 [label="sequential next"]
	81 -> 82 [label="sequential next"]
	78 -> 81 [label="procedure call"]
	78 -> 72 [label="perform-exit"]
	73 -> 78 [label=NotAtEnd]
	73 -> 72 [label="sequential next"]
	72 -> 73 [label=iteration]
	74 [label="CLOSE FD-WINMASKS
"]
	103 [label="IF NOT MOVE-COMPLETE AND WS-MOVES IS EQUAL TO 8
" shape=diamond]
	104 [label="MOVE \"STALE\" TO WS-MOVE-OUTCOME
"]
	105 [label="END-IF
"]
	108 [label="INITIALIZE WS-SWAP-PLAYERS
"]
	109 [label="EVALUATE WS-MOVE-OUTCOME
" shape=diamond]
	111 [label="WHEN \"WIN\"
" shape=diamond]
	112 [label="MOVE \"WINNER! (^_^)\" TO WS-MESSAGE
"]
	114 [label="MOVE \"WIN\" TO WS-STATE
"]
	115 [label="SET WS-SWAP-PLAYERS TO 1
"]
	110 [label="END-EVALUATE
"]
	136 [label="IF SWAP-PLAYERS
" shape=diamond]
	137 [label="IF HUMAN-PLAYER
" shape=diamond]
	140 [label="MOVE \"O\" TO WS-PLAYER
"]
	141 [label="END-IF
"]
	138 [label="END-IF
"]
	138 -> 10 [label="sequential next"]
	141 -> 138 [label="sequential next"]
	140 -> 141 [label="sequential next"]
	137 -> 140 [label=true]
	142 [label="MOVE \"X\" TO WS-PLAYER
"]
	142 -> 141 [label="sequential next"]
	137 -> 142 [label=false]
	136 -> 137 [label=true]
	136 -> 138 [label="outside-if"]
	110 -> 136 [label="sequential next"]
	115 -> 110 [label="sequential next"]
	114 -> 115 [label="sequential next"]
	112 -> 114 [label="sequential next"]
	111 -> 112 [label=true]
	109 -> 111 [label="evaluate when"]
	117 [label="WHEN \"LOSE\"
" shape=diamond]
	118 [label="MOVE \"YOU DIED (x_x)\" TO WS-MESSAGE
"]
	120 [label="MOVE \"LOSE\" TO WS-STATE
"]
	121 [label="SET WS-SWAP-PLAYERS TO 1
"]
	121 -> 110 [label="sequential next"]
	120 -> 121 [label="sequential next"]
	118 -> 120 [label="sequential next"]
	117 -> 118 [label=true]
	109 -> 117 [label="evaluate when"]
	123 [label="WHEN \"STALE\"
" shape=diamond]
	124 [label="MOVE \"Stalemate! (>_<)\" TO WS-MESSAGE
"]
	126 [label="MOVE \"STALE\" TO WS-STATE
"]
	126 -> 110 [label="sequential next"]
	124 -> 126 [label="sequential next"]
	123 -> 124 [label=true]
	109 -> 123 [label="evaluate when"]
	128 [label="WHEN \"FAIL\"
" shape=diamond]
	129 [label="MOVE \"Invalid move... (o_O)\" TO WS-MESSAGE
"]
	129 -> 110 [label="sequential next"]
	128 -> 129 [label=true]
	109 -> 128 [label="evaluate when"]
	132 [label="MOVE \"Enter a move\" TO WS-MESSAGE
"]
	133 [label="SET WS-SWAP-PLAYERS TO 1
"]
	134 [label="ADD 1 TO WS-MOVES
"]
	134 -> 110 [label="sequential next"]
	133 -> 134 [label="sequential next"]
	132 -> 133 [label="sequential next"]
	109 -> 132 [label=false]
	108 -> 109 [label="sequential next"]
	105 -> 108 [label="sequential next"]
	104 -> 105 [label="sequential next"]
	103 -> 104 [label=true]
	103 -> 105 [label="outside-if"]
	74 -> 103 [label="sequential next"]
	72 -> 74 [label="perform-exit"]
	71 -> 72 [label="sequential next"]
	70 -> 71 [label="sequential next"]
	69 -> 70 [label="sequential next"]
	63 -> 69 [label="sequential next"]
	65 -> 63 [label="sequential next"]
	62 -> 65 [label="sequential next"]
	61 -> 62 [label=true]
	64 [label="INSPECT WS-FLAT-GAME-GRID REPLACING ALL \"X\" BY \"0\"
"]
	67 [label="INSPECT WS-FLAT-GAME-GRID REPLACING ALL \"O\" BY \"1\"
"]
	67 -> 63 [label="sequential next"]
	64 -> 67 [label="sequential next"]
	61 -> 64 [label=false]
	60 -> 61 [label="sequential next"]
	21 -> 60 [label="sequential next"]
	23 -> 21 [label="perform-exit"]
	20 -> 23 [label="sequential next"]
	19 -> 20 [label=true]
	22 [label="INITIALIZE WS-NEXT-MOVE
"]
	34 [label="DISPLAY BOARD-SCREEN END-DISPLAY
"]
	35 [label="ACCEPT BOARD-SCREEN
"]
	36 [label="EVALUATE FUNCTION UPPER-CASE ( WS-NEXT-MOVE ( 1 : 1 ) )
" shape=diamond]
	38 [label="WHEN \"A\"
" shape=diamond]
	39 [label="SET WS-ROW TO 1
"]
	37 [label="END-EVALUATE
"]
	52 [label="SET WS-COL TO WS-NEXT-MOVE ( 2 : 1 )
"]
	53 [label="IF WS-MOVE-OUTCOME IS NOT EQUAL TO \"FAIL\" AND WS-COL IS GREATER THAN 0 AND WS-COL IS LESS THAN 4 AND WS-CELL ( WS-ROW , WS-COL ) = \" \"
" shape=diamond]
	54 [label="MOVE WS-PLAYER TO WS-CELL ( WS-ROW , WS-COL )
"]
	55 [label="END-IF
"]
	55 -> 21 [label="sequential next"]
	54 -> 55 [label="sequential next"]
	53 -> 54 [label=true]
	56 [label="MOVE \"FAIL\" TO WS-MOVE-OUTCOME
"]
	56 -> 55 [label="sequential next"]
	53 -> 56 [label=false]
	52 -> 53 [label="sequential next"]
	37 -> 52 [label="sequential next"]
	39 -> 37 [label="sequential next"]
	38 -> 39 [label=true]
	36 -> 38 [label="evaluate when"]
	42 [label="WHEN \"B\"
" shape=diamond]
	43 [label="SET WS-ROW TO 2
"]
	43 -> 37 [label="sequential next"]
	42 -> 43 [label=true]
	36 -> 42 [label="evaluate when"]
	46 [label="WHEN \"C\"
" shape=diamond]
	47 [label="SET WS-ROW TO 3
"]
	47 -> 37 [label="sequential next"]
	46 -> 47 [label=true]
	36 -> 46 [label="evaluate when"]
	50 [label="MOVE \"FAIL\" TO WS-MOVE-OUTCOME
"]
	50 -> 37 [label="sequential next"]
	36 -> 50 [label=false]
	35 -> 36 [label="sequential next"]
	34 -> 35 [label="sequential next"]
	22 -> 34 [label="sequential next"]
	19 -> 22 [label=false]
	18 -> 19 [label="sequential next"]
	17 -> 18 [label="sequential next"]
	16 -> 17 [label="sequential next"]
	15 -> 16 [label="sequential next"]
	14 -> 15 [label="sequential next"]
	13 -> 14 [label="sequential next"]
	10 -> 13 [label="procedure call"]
	9 -> 10 [label="sequential next"]
	8 -> 9 [label="sequential next"]
	7 -> 8 [label="sequential next"]
	6 -> 7 [label="sequential next"]
	5 -> 6 [label="sequential next"]
	2 -> 5 [label="procedure call"]
	1 -> 2 [label="sequential next"]
}
